<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:thr="http://purl.org/syndication/thread/1.0" xml:lang="" xml:base="http://www.smashingmagazine.com/wp-atom.php">
    <title type="text">Smashing Magazine Feed</title>
    <subtitle type="text">For Professional Web Designers and Developers</subtitle>

    <updated>2013-11-20T17:14:17Z</updated>
            

    <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com"/>
    <id>http://www.smashingmagazine.com/feed/atom/</id>
    <link rel="self" type="application/atom+xml" href="http://rss1.smashingmagazine.com/feed/"/>

            
                <entry>
        <author>
            <name>Wesley Hales</name>
                                    <uri>http://wesleyhales.com/</uri>
                    </author>
                <title type="html"><![CDATA[Reinventing The Tech Conference Experience]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/20/fixing-conferences-with-onslyde/"/>
        <id>http://mgmt.smashingmagazine.com/?p=176139</id>
        <updated>2013-11-20T17:14:17Z</updated>
        <published>2013-11-20T14:21:56Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Coding"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/20/fixing-conferences-with-onslyde/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>If you had to name one thing that could have been better at the last conference or meetup you attended, what would it be? I bet you’d say that the <strong>speaker or content could have been better in some way</strong>. Think back to the last boring presentation you had to sit through. Maybe that investment of time could have paid off if the presenter knew you felt this way.</p>
<p>I created <a href="http://onslyde.com/#!/home">Onslyde</a> to solve this problem. It’s a free service and <a href="https://github.com/onslyde">open-source project</a> that (hopefully) will make public speaking easier and conferences better.</p>
<p>The motivation for the project came from my own speaking engagements in the tech industry. I wanted to see how many people in the audience actually agreed or disagreed with what I was saying. I also wanted to leverage their experience and knowledge to create a better learning environment.</p>
<p><strong>Presentations today are mostly unidirectional</strong>, with a single presenter giving information to the audience. But it doesn’t have to be that way. Now, with the ubiquity of mobile devices, everyone in the room can contribute to the conversation and make it better. Many books have been written on the topic of collective wisdom. In <a href="http://en.wikipedia.org/wiki/The_Wisdom_of_Crowds"><em>The Wisdom of Crowds</em></a>, James Surowiecki states:</p>
<blockquote>
<p>&#8220;… a diverse collection of independently deciding individuals is likely to make certain types of decisions and predictions better than individuals or even experts.&#8221;</p>
</blockquote>
<p>For the past year, I have been putting this thesis to the test, enabling people to interact with and change the content that I deliver. It’s been a lot of fun and work, and now you get to see the result.</p>
<h3>Ratings And Feedback</h3>
<p>When we look at current systems of rating and feedback at conferences, most of them are reactive, meaning that participants rate the session after it’s over. This is why most <strong>people don’t even rate sessions, unless they are asked or forced to</strong> by the doorkeeper. Those who do rate sessions might not care to be accurate (giving all 5s or 4s and then hurrying to the coffee line). Other attendees might have enjoyed the majority of the talk, but then got upset by the last slide or by the way the speaker ended the talk.</p>
<p>If these people decided to rate the presentation, how many stars do you think they would give? Perhaps 3 or 4 stars because of their anger at the end, but who really knows? Without context, a low rating doesn’t tell the speaker which part of the talk an attendee didn’t like.</p>
<p>Real-time feedback gives context to a rating, making traditional feedback unnecessary. Conference organizers and speakers no longer have to rely solely on Twitter hash tags and reactive ratings to see how well things went. We can now visualize exactly how the audience felt at any millisecond of a presentation.</p>
<h4>Real-Time Ratings With Onslyde</h4>
<p>Giving a presentation that allows for real-time feedback is like riding a bicycle down a really steep hill for the first time. You have no idea whether you will crash and burn or come out with an adrenaline-filled scream at the other end. And it’s just as much fun for the audience.</p>
<p>With Onslyde, <strong>you get an accurate measure from the audience while you’re speaking</strong>. If you see that a lot of people are disagreeing with what you’re saying, you can adapt: Ask audience members for their thoughts, or maybe move on to another topic. When you’re presenting, actually seeing how the audience collectively feels in real time and then responding accordingly is a very cool experience.</p>
<p>The worst thing a presenter can do is tell the audience something it already knows or say something totally wrong. The audience wants to be intrigued and entertained by you. But too many speakers seem to think this requires GIFs of cats. Well, I don’t want to spoil anyone’s fun but I’m an adult now, and I don’t go to thousand-dollar conferences to look at funny pictures of cats. I do want to be able to challenge you, engage with the content and tell you when you’re wrong.</p>
<p>So, let’s talk about how the audience indicates whether you’re right or wrong. Onslyde’s remote control gives audience members between two and four ways to interact, depending on the type of session. It works for both normal presentations and panel discussions.</p>
<p>For presentations:</p>
<ul>
<li>Any slide can be agreed or disagreed with.</li>
<li>Presenters can poll the audience by asking a question and giving two answers to choose from.</li>
<li>Remote devices are updated with content for each slide.</li>
</ul>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pres-remote-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pres-remote-250-opt.png" alt="pres-remote-250-opt" width="250" height="486" class="alignnone size-full wp-image-130231" /></a></p>
<p>For panel discussions:</p>
<ul>
<li>Anyone (either panelist or audience member) can be agreed or disagreed with.</li>
<li>Votes are on a rolling average, meaning that they expire after 15 seconds (or a time specified by the moderator).</li>
<li>Any audience member can request to speak. This option will add them to a queue on the main screen.</li>
</ul>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/panel-remote-opt1.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/panel-remote-250-opt.png" alt="panel-remote-250-opt" width="250" height="486" class="alignnone size-full wp-image-130234" /></a></p>
<p><strong>All remote devices receive real-time updates</strong> based on the slide or current speaker. In individual presentations, the speaker can specify content or images to send to all remotes per slide. For example, if a bulleted list is on the current slide, you could send it to the remotes by adding <code>class="send"</code> to the markup:</p>
<pre><code class="language-markup">
&lt;section class=&quot;slide&quot;&gt;
	&lt;ul class=&quot;send&quot;&gt;
	&lt;li&gt;Onslyde makes you a better presenter.&lt;/li&gt;
	&lt;/ul&gt;
&lt;/section&gt;
</code></pre>
<p>We’ll go over the technical details in the next section. For now, note how easy it is to broadcast markup to everyone’s remotes.</p>
<p><a href="http://edgeconf.com/">Edge Conf</a>, hosted at Google’s New York office in October 2013, was the first time ever when the audience participated in real time (via Onslyde) during an entire conference.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/edge1-panel-detail-large-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/edge1-panel-detail-500-opt.png" alt="edge1-panel-detail-500-opt" width="500" height="479" class="alignnone size-full wp-image-130237" /></a></p>
<h4>What If There’s No Wi-Fi?</h4>
<p>At this point, you might be thinking that this is a cool idea, but what about the 99% of conferences that have shaky or no Wi-Fi connectivity?</p>
<p>A presentation will work with or without an Internet connection; however, with no connection, it will just be like a normal presentation, and the audience would not be able to interact.</p>
<p>If you have a smartphone with a tetherable data plan, <strong>you can tether your laptop and enable Onslyde to connect from a mobile phone</strong>. It might sound crazy, but the lightweight messages that are sent across the wire still allow the presentation to run smoothly.</p>
<p>Even if Wi-Fi at a conference is unstable, the audience can always connect to the presentation with their mobile device’s data plan. I’ve personally given six or seven presentations with Onslyde and haven’t run into any issues so far.</p>
<p>Below you can see the network statistics from a talk I gave earlier this year. Even though the conference had stable Wi-Fi, attendees were connecting through their mobile data plan:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/visits-by-provider-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/visits-by-provider-opt.png" alt="visits-by-provider-opt" width="426" height="388" class="alignnone size-full wp-image-130242" /></a></p>
<p>Some have suggested <a href="https://github.com/onslyde/onslyde/issues/32">bringing SMS into the picture</a>, as a fallback. This would enable attendees to vote by sending text messages to the server. If you have other ideas, please leave them in the comments!</p>
<h3>Building An Interactive Presentation</h3>
<p>The Onslyde framework plugs into any HTML-based presentation system. For now, it supports presentations written with the following:</p>
<ul>
<li><a href="http://lab.hakim.se/reveal-js/#/">RevealJS</a>,</li>
<li><a href="http://bartaz.github.io/impress.js/#/bored">Impress.js</a>,</li>
<li><a href="http://markdalgleish.com/projects/bespoke.js/">Bespoke.js</a>,</li>
<li>plain HTML.</li>
</ul>
<p>Currently, there is no nice WYSIWYG tool for building a slide deck. A tiny bit of HTML knowledge is required to build a presentation, but that’s it &mdash; no JavaScript or other programming. This is good because you don’t have to log into the system to edit your deck minutes before going on stage. <strong>You can change the markup at any time</strong>, and you will be ready to present after refreshing the browser.</p>
<p>The following use cases show how to add interactive elements to a presentation.</p>
<h4>Audience Members Vote on (i.e. Agree or Disagree With) Any Slide</h4>
<p>This comes out of box, no set-up required. Onslyde is built around “slide groups.” “Agree” and “Disagree” votes can only be given once in a slide group. This lets you focus on a particular topic with multiple slides and not be bombarded with votes on each screen.</p>
<pre><code class="language-markup">
&lt;section class=&quot;slide-group&quot;&gt;
	&lt;section class=&quot;slide&quot;&gt;
		&lt;p&gt;Onslyde makes you a better presenter.&lt;/p&gt;
	&lt;/section&gt;
&lt;/section&gt;
</code></pre>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/buttons-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/buttons-opt.png" alt="buttons-opt" width="300" height="273" class="alignnone size-full wp-image-130245" /></a><br />
<em>The buttons above will become active once the presenter moves to a new slide group.</em></p>
<h4>Ask Unlimited Questions With Two Answers</h4>
<p>To create an onscreen poll, use the following markup:</p>
<pre><code class="language-markup">
&lt;section class=&quot;slide-group&quot;&gt;

	&lt;section class=&quot;slide&quot; data-option=&quot;master&quot;&gt;
		&lt;h3 class=&quot;send&quot;&gt;
		What is your favorite JavaScript framework?
		&lt;/h3&gt;
	&lt;/section&gt;

	&lt;section class=&quot;slide&quot; data-option=&quot;jquery&quot;&gt;
		&lt;div class=&quot;send&quot;&gt;
		Time to talk about jQuery!
		&lt;/div&gt;
	&lt;/section&gt;

	&lt;section class=&quot;slide&quot; data-option=&quot;querySelector&quot;&gt;
		&lt;div class=&quot;send&quot;&gt;
		Let’s go into more detail about core JavaScript!
		&lt;/div&gt;
	&lt;/section&gt;

&lt;/section&gt;
</code></pre>
<p>By adding the markup above to your presentation, the bar chart in the following image will be automatically created and populated as votes are submitted:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/favorite-javascript-framework-large-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/favorite-javascript-framework-500-opt.png" alt="favorite-javascript-framework-500-opt" width="500" height="391" class="alignnone size-full wp-image-130247" /></a></p>
<p>The buttons at the top will illuminate on the remote controls, and attendees may start voting:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/start-voting-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/start-voting-opt.png" alt="start-voting-opt" width="235" height="300" class="alignnone size-full wp-image-130251" /></a></p>
<h4>Send Content to All Devices at Any Time</h4>
<p>Notice how the remote control’s image shows the title of the poll? As mentioned, this is because we added <code>class="send"</code> to the parent element of the heading.</p>
<pre><code class="language-markup">
&lt;section class=&quot;slide&quot;&gt;
	&lt;h3 class=&quot;send&quot;&gt;
	What is your favorite JavaScript framework?
	&lt;/h3&gt;
&#8230;
</code></pre>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/start-voting-2-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/start-voting-2-opt.png" alt="start-voting-2-opt" width="219" height="300" class="alignnone size-full wp-image-130253" /></a><br />
<em>The sent markup will appear below the button options.</em></p>
<p>You can also send something completely different than what is shown by the projector. Instead of sending the title of the poll, you could send the names of other JavaScript libraries for attendees to research:</p>
<pre><code class="language-markup">
&lt;section class=&quot;slide&quot;&gt;
	&lt;h3&gt;
	What is your favorite JavaScript framework?
	&lt;/h3&gt;

	&lt;div class=&quot;none&quot;&gt;
		&lt;ul class=&quot;send&quot;&gt;
		&lt;li&gt;Zepto&lt;/li&gt;
		&lt;li&gt;xui&lt;/li&gt;
		&lt;li&gt;&#8230;&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/div&gt;
</code></pre>
<h4>Raffle or Giveaway: Random Selection of Audience Member</h4>
<p>To me, one of the funnest parts of this tool is giving away swag at the end of a talk. You can randomly select anyone who is connected by adding the following link to your slide deck:</p>
<pre><code class="language-markup">
&lt;a href=&quot;javascript:onslyde.slides.roulette()&quot;&gt;Pick a winner&lt;/a&gt;
</code></pre>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/winner-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/winner-opt.png" alt="winner-opt" width="154" height="300" class="alignnone size-full wp-image-130256" /></a></p>
<p>Just place the link on the final slide and click it at the end of your talk. Everyone’s mobile device will flash red; then, the winner’s will turn yellow. Continue clicking to pick more people at random.</p>
<h3>Best Practices</h3>
<p>The easiest way to get started with each feature is to focus on how you want the audience to interact with you and your content. Here are some good rules of thumb that I have learned using this tool:</p>
<ul>
<li><strong>Start each presentation with a poll on the first or second slide.</strong> This allows the audience to get their device ready, get connected and start giving their opinion. It’s fun to pose a controversial question about your presentation topic and watch the votes pour in.</li>
<li>Polls can solicit a “Yes” or “No” feeling from the audience or go deeper. If you ask a question like, “Which JavaScript framework do you use?” and then give options for “AngularJS” or “Backbone”, you will be able to fork the slides. This is why preparing the slides beforehand is more rewarding. Onslyde will detect the majority vote, and when you go to the next slide, the losing slides will be removed from the presentation (temporarily) and only the slides from the winning option will be shown.</li>
</ul>
<h3>Getting Started</h3>
<p>Presentations can be created at <a href="http://onslyde.com/">onslyde.com</a>. And the <a href="https://github.com/onslyde/server">open-source back end</a> that manages a presentation’s feedback is hosted on GitHub. Anyone can run the server and host their own instance of the entire Onslyde stack if they wish.</p>
<p>All of the features mentioned are integrated in each demo to show use cases. To begin your first presentation, go to the “<a href="http://onslyde.com/#!/gettingstarted">Getting Started</a>” section, where you will have the option to run a demo presentation or sign in and create a private one.</p>
<p><a href="http://onslyde.com/#!/gettingstarted"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/onslyde.getting-started-500-opt.png" alt="onslyde.getting-started-500-opt" width="500" height="327" class="alignnone size-full wp-image-130258" /></a><br />
<em>(<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/onslyde.getting-started-opt.png">Large view</a>)</em></p>
<p>After you’ve signed in, the “Getting Started” page will give you options for setting up a poll. After hitting the “Preview” button, you must save the HTML to your computer in order to edit and present the slides.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/setting-up-large-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/setting-up-500-opt.png" alt="setting-up-500-opt" width="500" height="290" class="alignnone size-full wp-image-130263" /></a><br />
<em>(<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/setting-up-large-opt.png">Large view</a>)</em></p>
<p>An Onslyde presentation can be run anywhere. Essentially, it’s the same as saving a Keynote or PowerPoint presentation on your computer. Just click on the HTML file and run it from a Web browser &mdash; no need to install anything or run it from a server.</p>
<h4>Regarding Keynote and PowerPoint</h4>
<p>For those of you who use non-HTML slide decks, such as Keynote and PowerPoint, there are plans to create a <a href="https://github.com/onslyde/onslyde/issues/31">transparent overlay</a> on top of Windows and Mac OS X. This will allow presenters to use any presentation tool and to collect feedback in real time.</p>
<h3>Understanding Audience Feedback</h3>
<p>After your talk is over, you can view the analytics for your session. The votes for each slide are recorded so that you can track your performance at a fine-grained level.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/chart1-large-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/chart1-500-opt.png" alt="chart1-500-opt" width="500" height="252" class="alignnone size-full wp-image-130267" /></a></p>
<p>For questions that the audience voted on, each option is recorded, along with the “Agree” and “Disagree” votes for each poll.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/chart2-large-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/chart2-500-opt.png" alt="chart2-500-opt" width="500" height="226" class="alignnone size-full wp-image-130270" /></a></p>
<p>The other important pieces of data come from Google Analytics, including engagement times and what kinds of devices and mobile networks were used.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/analytics-large-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/analytics-500-opt.png" alt="analytics-500-opt" width="500" height="549" class="alignnone size-full wp-image-130294" /></a><br />
<em>Google Analytics showed that real-time feedback was provided not just from the people in the room. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/analytics-large-opt.png">Large view</a>)</em></p>
<p>From the above image, we can see that 281 iOS devices and approximately 113 Android devices were used at Edge Conf. Because the event was streamed live, over twice as many unique devices appeared as there were people in the room &mdash; people were participating and providing real-time feedback <strong>as they watched the live stream from their home or office</strong> around the world!</p>
<p>One other cool piece to this analytics puzzle is mapping voting times to the video. Edge Conf was streamed live, and the videos were subsequently added to YouTube. After finding a reference point in the video and calculating the starting time, we were able to map the charts to the videos. If you clicked on any data point from a session, the video would skip to that voting period. <a href="http://onslyde.com/analytics?sessionID=206">Try it out for yourself.</a></p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/voting-period-large-opt.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/voting-period-500-opt.png" alt="voting-period-500-opt" width="500" height="286" class="alignnone size-full wp-image-130278" /></a><br />
<em>We were able to map the voting times to the conference videos. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/voting-period-large-opt.png">Large view</a>)</em></p>
<h3>Conclusion</h3>
<p>As we’ve seen, so much more valuable data can be pulled from the conferences we attend. Not only can we get an accurate snapshot of how speakers performed and how audience members felt, but <strong>we can change the learning experience for everyone</strong>.</p>
<p>This project is a use case for the mobile Web and a playground for the new technologies that are available to modern Web browsers, such as WebSockets and WebRTC. Many other companies and conferences provide similar services using native apps and proprietary hardware, but the convenience of opening a Web browser and being exposed to a new level of education and interaction is immeasurable.</p>
<p>Many thanks to <a href="https://twitter.com/triblondon">Andrew Betts</a> for helping me with this article and providing great feedback. He is also responsible for most of the features in the Onslyde panel and remote interfaces.</p>
<p><em>(al, ea)</em></p>
<hr />
<p><small>© Wesley Hales for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/20/fixing-conferences-with-onslyde/#comments" thr:count="0"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/20/fixing-conferences-with-onslyde/feed/atom/" thr:count="0"/>
        <thr:total>0</thr:total>
    </entry>
            <entry>
        <author>
            <name>Joshua Gross</name>
                                    <uri>http://planetary.io</uri>
                    </author>
                <title type="html"><![CDATA[How Usability Testing Drastically Improved My Client&#8217;s App]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/19/how-usability-testing-drastically-improved-my-clients-app/"/>
        <id>http://mgmt.smashingmagazine.com/?p=176303</id>
        <updated>2013-11-19T14:35:17Z</updated>
        <published>2013-11-19T14:35:17Z</published>
            <category scheme="http://www.smashingmagazine.com" term="UX Design"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/19/how-usability-testing-drastically-improved-my-clients-app/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>Most designers spend too much time with their designs to be objective about them. The best thing any designer can do is to collect feedback from real users. <strong>Testing uncovers pain points</strong> and flaws in a design that are not otherwise obvious.</p>
<p>Recently, I had an opportunity to experience this firsthand when iterating on <em>HelloSign</em>, the iOS app that enables users to scan, sign and send documents from their phone using the built-in camera. Thanks to testing, the app went from four stars to a solid five stars after a redesign. We’ll look at how the app started, how we ran the tests and how the product ended up with five stars.</p>
<h3>The Original Design</h3>
<p>This app has four primary sections: authentication, welcome, document creation and document editing. The biggest changes we made to the app were on the authentication and welcome screens. We’ll first briefly review the original designs of these screens, as well as the document creation and editing screens, to understand how the app works.</p>
<h4>Authentication and Welcome</h4>
<p>The authentication and welcome screens are important moments in the user’s initial experience of the product, because we want to move the user from signing up or &mdash; if they already have an account on the <a href="http://hellosign.com">HelloSign website</a> &mdash; signing in to creating documents. <strong>The app was designed to complement the website</strong>, with the understanding that users would already be somewhat familiar with the product and would likely have a user name. Had this been designed as a standalone app, authentication would have been a secondary option, rather than a requirement.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/10-final-opt.png"><img class="alignnone size-full wp-image-139315" alt="" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/10-final-500-opt.png" width="500" height="303" /></a><br />
<em>The original versions of the sign-in, sign-up and welcome screens.</em></p>
<h4>Document Creation</h4>
<p>The document creation process consists, in essence, of a camera, with guides to position the document in the frame. In designing this process, we looked to the camera screens of the iPhone’s native Camera app and of Instagram, as well as to the framing markers found in products such as Schwab’s app for depositing checks and Card.io’s app for scanning credit cards.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/13-creation-opt.png"><img class="alignnone size-full wp-image-139550" alt="Document Creation" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/13-creation-opt.png" width="384" height="350" /></a><br />
<em>The final document creation screens.</em></p>
<h4>Document Editing</h4>
<p>After creating a document, the user is presented with the editing screen. Here, they can modify the document by adding signatures, text, checkboxes and date stamps.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/14-editor-opt.png"><img alt="Document Editor" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/14-editor-opt.png" width="384" height="350" /></a><br />
<em>The final document editing screens.</em></p>
<h3>User Testing</h3>
<p>A few months after the initial version landed in the App Store, I was given an opportunity to iterate on the app. Before beginning, I decided to run a user test to better understand what in the app was effective and what could be improved.</p>
<p>While several user-testing services are available, such as <a href="http://verifyapp.com/">Verify</a> and <a href="http://www.utest.com/">uTest</a>, I decided on <a href="http://usertesting.com">UserTesting.com</a> because of the quality and value that you get for the relatively inexpensive price. Different testing services offer different benefits, features and options; <a href="http://uxdesign.smashingmagazine.com/2011/10/20/comprehensive-review-usability-user-experience-testing-tools/">review them</a> for yourself, and select the one that best fits your goals and needs. With UserTesting.com, you purchase a package of tests, and <strong>users will record videos</strong> as they go through whatever task you’ve assigned to them. You may also ask several follow-up questions of each user, such as, “What was the most frustrating part of your experience?” Conveniently, UserTesting.com provides four very strong default questions that will suit most tests.</p>
<p>As <a href="http://www.nngroup.com/articles/why-you-only-need-to-test-with-5-users/">explained by Jakob Nielsen</a>, testing interfaces on many users is not necessary in order to identify issues; even three to five users might suffice. Because this app is for on-the-fly document signing, we ran a test that took users through a typical use case: creating, editing and sending a document. Follow-up questions were based on UserTesting.com’s suggestions and queried users on ease of use, areas of difficulty and areas for improvement. You could ask <a href="http://www.smashingmagazine.com/2009/06/29/45-incredibly-useful-web-design-checklists-and-questionnaires/">many different questions</a>. Once the tests were completed, after just a couple of hours, I could immediately identify several issues.</p>
<p>I reviewed each video twice. The first pass was merely to identify any glaring issues and to familiarize myself with the tester’s recording style. On the second pass, I paid closer attention, noting specific problems. During testing, most users won’t articulate problems they’re having, but <strong>the problems will be fairly obvious from their behavior</strong>. A problem is obvious when the user does any of the following:</p>
<ul>
<li>pauses for a few seconds when trying to complete a task,</li>
<li>stumbles and has to backtrack in their steps or has to undo an action,</li>
<li>expresses audible frustration (a sigh or grumble),</li>
<li>takes a longer route to achieve a goal than expected,</li>
<li>fails entirely at a task.</li>
</ul>
<p>While there are certainly many others, these are some of the most common indicators of a problem worth delving into. The more tests you run (with small groups), the more problems you will identify. Running a test after each new design iteration is highly valuable, if you can afford to do so. Some problems might affect only a small percentage of your user base, while others might affect the vast majority. Spend time prioritizing the problems that you identify according to your existing list of features, goals and user requests. Not every problem is worth resolving.</p>
<h3>The Redesign</h3>
<p>The goal of HelloSign’s redesign was to identify and fix any major problems for users. As mentioned, one can take forever to resolve every last issue; budget limitations kept our scope small.</p>
<h4>What Did We Learn?</h4>
<p>The tests revealed a major problem with the authentication screens. It seemed to be a stumbling block because most users weren’t clear about whether they were in the “sign up” or “sign in” state. Users often tapped back and forth between authentication states before understanding which screen was for signing up and which was for signing in.</p>
<p>We also discovered the following:</p>
<ul>
<li><strong>Creating pages was too repetitive a process.</strong><br />
After taking each photo, the user had to tap “Add page,” take another photo and then repeat. This was tedious, and some testers remarked that the process felt unnecessarily repetitive, while others expressed audible frustration.</li>
<li><strong>Users could not edit a date after adding one.</strong><br />
One tester wanted to add a past date to a document. While a “date” object could be added to the document, it showed only the current date (i.e. of creation) and could not be edited. This was confusing and unnecessarily restrictive.</li>
<li><strong>Markers for aligning the document during scanning needed refinement.</strong><br />
Users had trouble lining up the document with the boundaries on the camera screen, with some expressing frustration and with many giving up.</li>
</ul>
<h4>Fixing Authentication</h4>
<p>Our most substantial changes were to the authentication process, which was changed almost entirely. Dumping the user right into the sign-up screen, with only a “Sign up” button as a state indicator, proved to be confusing. During testing, most users seemed to expect this screen to let them sign in, not register. The revised screen added a step, forcing the user to <strong>explicitly select “Sign up” or “Sign in,”</strong> making it a conscious decision. An alternative solution could have been to add distinct labeling above the user name and password fields, because users typically read from top to bottom, although I was afraid that wouldn’t entirely resolve the issue.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/19-final-start-opt.png"><img class="alignnone size-full wp-image-139547" alt="Original vs. New Start Screen" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/19-final-start-500-opt.png" width="500" height="371" /></a><br />
<em>The original (left) and revised (right) welcome screens.</em></p>
<p>After selecting one of the two options, users were brought to one of two nearly identical screens, the difference being only in the labelling of the button, “Sign up” or “Sign in”. As you can see in the revision, the layout was simplified and Google authentication was added. Despite both screens being the same, <strong>forcing the user to choose a path</strong> cleared up any confusion.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/20-final-signin-opt.png"><img class="alignnone size-full wp-image-139548" alt="Original vs. New Sign In Screen" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/20-final-signin-500-opt.png" width="500" height="371" /></a><br />
<em>The original (left) and revised (right) sign-in screens.</em></p>
<p>Lastly, the home screen was heavily revised. While certainly clear before, it de-emphasized “Help” far too much and generally felt clunky and heavy-handed. The revision brought “Help” to the forefront and <strong>highlighted the “Scan” action</strong>, scanning being the primary purpose of the app.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/21-final-home-opt.png"><img class="alignnone size-full wp-image-139549" alt="Original versus final home screen" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/21-final-home-500-opt.png" width="500" height="371" /></a><br />
<em>The original (left) and revised (right) home screens.</em></p>
<h3>The Takeaway</h3>
<p>Design is a highly iterative process, and all of the intuition in the world won’t help you to identify gaps in your product. As designers, <strong>we’re just too familiar with our own work</strong> to be able to easily spot where it fails. The only way to truly improve a design is to <a href="http://blog.allyis.com/the-value-of-user-testing/">test it on real users</a> and watch how they interact with it. Testing with a live app uncovered problems that led us to turn a four-star effort into a five-star product, with only a little work.</p>
<p>There are many ways to test a app, at an array of price points. It could be as simple as sitting down with a few friends and having each of them use your app for a few minutes, or as complex as hiring a moderator to bring in a variety of users to your office. There is also <a href="http://www.wired.com/wiredenterprise/2013/11/leanplum/">A/B testing</a>, which can &mdash; and probably should &mdash; be done in conjunction with user testing. While user testing is great for big updates and for identifying major problems, A/B testing, which is less costly, is great for continually testing new ideas and underlying assumptions.</p>
<p>Remote services are inexpensive, and they structure the tests for you and free you from having to hunt down users. No matter how tight your budget or how simple the app, <strong>testing your design on real users is always worthwhile</strong> and will help you better understand where the product can be improved.</p>
<p><em>(al, ea)</em></p>
<hr />
<p><small>© Joshua Gross for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/19/how-usability-testing-drastically-improved-my-clients-app/#comments" thr:count="0"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/19/how-usability-testing-drastically-improved-my-clients-app/feed/atom/" thr:count="0"/>
        <thr:total>0</thr:total>
    </entry>
            <entry>
        <author>
            <name>Sean Fioritto</name>
                                </author>
                <title type="html"><![CDATA[The Future Of Video In Web Design]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/18/the-future-of-video-in-web-design/"/>
        <id>http://mgmt.smashingmagazine.com/?p=176228</id>
        <updated>2013-11-18T13:20:15Z</updated>
        <published>2013-11-18T13:20:15Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Coding"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/18/the-future-of-video-in-web-design/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>Federico was the only other kid on the block with a dedicated ISDN line, so I gave him a call. It had taken six hours of interminable waiting (peppered with frantic bouts of cursing), but I had just watched 60 choppy seconds of the original Macintosh TV commercial <em>in Firefox</em>, and I had to tell someone. It blew my mind.</p>
<p>Video on the Web has improved quite a bit since that first jittery low-res commercial I watched on my Quadra 605 back in 7th grade. <strong>But for the most part, videos are still separate from the Web</strong>, cordoned off by iframes and Flash and bottled up in little windows in the center of the page. They’re a missed opportunity for Web designers everywhere.</p>
<p>But how do you integrate video into an app or a marketing page? What would it look like, and how do you implement it? In this article, you will find inspiration, how-tos and a few technical goodies to get you started with modern video on the Web.</p>
<h3>When Video Leaves Its Cage</h3>
<p>Video combined with animation is a powerful tool for innovative and compelling user experiences. Imagine interactive screencasts and tutorials in which DOM elements flow and move around the page in sync with the instructor. Why not combine video with animation to walk new users through your app? Or what about including videos of your product on your marketing page, instead of static JPEGs? Getting carried away is easy &mdash; video can become little more than sophisticated blink tags if you’re not careful. But there are plenty of beautiful, inspiring examples of video tightly integrated in a design.</p>
<p>Apple’s new marketing page for the <a href="http://www.apple.com/mac-pro/">Mac Pro</a> is a stunning example of video reaching out from its cage into the surrounding content. The new Mac Pro is featured in the center of the page, and as you scroll, <strong>it swoops and spins and disassembles itself</strong>. Supporting copy fades in to describe what you are seeing.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/macpro.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/mac-pro-opt.png" /></a><br />
<em>A static screenshot of the new landing page doesn’t do the new Mac Pro justice. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/macpro.png">larger view</a>)</em></p>
<p>Another great example of interactive video is Adrian Holovaty’s <a href="http://www.soundslice.com/">Soundslice</a>. Soundslice is filled with YouTube videos of music sliced and diced into tablature (or tabs), which is notation that guitar players use to learn music.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/soundslice.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/soundslice-opt.png" /></a><br />
<em>The musical bars at the bottom stay in sync with the video. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/soundslice.png">larger view</a>)</em></p>
<p>When you watch a music video, the tabs are animated at the bottom in time with the music, so that you can play along with your guitar. You can even slow down the video or loop selections to practice difficult sections, and the tab animation will stay in sync.</p>
<h3>How Do You Add Video To A Design?</h3>
<p>If you venture into video and animation in your next project, you won’t have many resources to lean on for implementation. No canonical, easy-to-use, open-source library for syncing video with animation exists, so every implementation is a bit different. Should you use a JavaScript animation library or pure CSS keyframes and transitions? Should you host the videos yourself and take advantage of HTML5’s <code>video</code> tag events or use YouTube or Vimeo? And then how exactly do you tie animations to a video?</p>
<p>Together, we will explore answers to the above-mentioned questions and more as we build our own micro JavaScript framework. <a href="https://github.com/sfioritto/charlie.js">Charlie.js</a> provides an easy-to-use API for building pages with synchronized video and CSS3 animation.</p>
<p><a href="http://www.flickr.com/photos/89093669@N00/1535398417/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/chaplin_skates.jpg" width="500" height="373" alt="" title="" /></a><br/><em>Charlie.js, named in honor of Charlie Chaplin. (<a href="http://www.flickr.com/photos/89093669@N00/1535398417/">Image source</a>)</em></p>
<p>The best way to learn is by doing, so let’s dive in.</p>
<h3>What Does Charlie.js Do?</h3>
<p>We need a way to create animations and then trigger them at certain moments in a video. We also need to pause the animations if the video stops, and we’ll need a way to handle the user jumping around to different times in the video.</p>
<p>To limit the scope of this article, <strong>we’ll have Charlie.js use only CSS animations</strong>. JavaScript animation libraries are more flexible and powerful than CSS animations, but wrapping one’s head around the straightforward, declarative syntax of keyframes is pretty easy, and the effects are hardware-accelerated. Sticking with only CSS animations is a pretty good choice for small projects.</p>
<p>To keep it simple, Charlie.js will support only one video per page.</p>
<p>As we go through the exercise of building this library, remember that we’re using the framework just to learn about CSS animation and video on the Web. The goal is to learn, not to create production-quality code.</p>
<h3>Define The API</h3>
<p>For our little framework, defining the API first makes sense. In other words, we need to figure out how someone would use the library and then write the JavaScript to implement the API.</p>
<p>A video and animation library could work in many ways, but <strong>the main interface puzzle is to figure out how to couple the animation to the video</strong>. How should a developer specify which animations should appear on which elements and at which times they should start in the video?</p>
<p>One option is to suck down the data in JSON or XML. The opposite solution is to have no separate data files and to put all of the configuration into pure JavaScript function calls. Both are fine, but there is a middle road.</p>
<p>Normally, CSS animation is defined in a style sheet. Ideally, that’s where it should be defined for Charlie.js, not in a JSON file. It just makes sense, and doing it this way has advantages. When the animation is in a style sheet, rather than a JavaScript or JSON file, you can test it without loading the entire video and animation library.</p>
<p>The animations are coupled to an element with data attributes. The data attributes define the animation names and also specify the start times.</p>
<p>Let’s say you have a CSS animation named <code>fade</code> for dialing down the opacity, and another named <code>fling</code> for moving elements off the page. And you want a div on the page to use both animations three seconds into the video. Your markup would look like this:</p>
<pre><code class="language-javascript">
&lt;div class="charlie" data-animations="fade, fling" data-times="3, 3"&gt;
...
&lt;/div&gt;
</code></pre>
<p>Charlie.js will see this and know to run the <code>fade</code> and <code>fling</code> animations once the video hits three seconds.</p>
<p>The <code>fade</code> and <code>fling</code> animations are defined in a style sheet that is linked to the document.</p>
<p>Here is what the <code>fade</code> animation might look like (browser prefixes are excluded here but are <a href="http://caniuse.com/css-animation">required for Chrome and Safari</a>):</p>
<pre><code class="language-javascript">
.fade {
	animation-name: fade;
	animation-duration: 3s;
	animation-timing-function: linear;
	animation-iteration-count: 1;
	animation-direction: normal;
	animation-fill-mode: forwards;
}

@keyframes fade {
	0% {
		opacity: 1;
	}

	100% {
		opacity: 0;
	}
}
</code></pre>
<p>The <code>.fade</code> class is what Charlie.js applies to the animated element, which will trigger the <code>fade</code> animation.</p>
<h3>Host The Videos: HTML5 Vs. Flash And Silverlight</h3>
<p>With the API out of the way, the next decision is how to host the video. The host will determine what kind of container the video is stuffed into, and the container will determine what is possible with the video.</p>
<p>Video embedded with Flash or Silverlight will limit your design options, so the video-hosting service should ideally support HTML5’s <code>video</code> tag. The <code>video</code> tag is easier to style and move around on the page. You can apply CSS filters and transforms and even use CSS animation on the video itself. Plus, the standard media events are robust and provide plenty of places and ways to hook your code into the video. The big downside of the <code>video</code> tag is compatibility. It doesn’t work in Internet Explorer 8.</p>
<p>What kinds of video-hosting should Charlie.js support? Building a library that supports multiple hosting options is feasible. For example, Popcorn.js (an awesome library for syncing content with video) supports several hosting options and APIs. But <strong>to keep it simple, our little library will support only a vanilla <code>video</code> tag</strong>. Anything in an iframe or Flash container won’t be supported.</p>
<p>That’s nice for Charlie.js, but what if you are stuck supporting old browsers and have to deal with a video stuffed in an iframe? Most video-hosting companies have decent APIs. At the very least, you should be able to use those APIs to sync up your animation &mdash; you’ll just be stuck working with an embedded Flash object. YouTube and Vimeo are the most popular services, and both offer extensive APIs. <a href="http://wistia.com/">Wistia</a> is another great option but less well known.</p>
<p>If you want to use a pure <code>video</code> tag but don’t want to host the video yourself, take a look at <a href="http://m.vid.ly/">Vid.ly</a>. Once you upload your video, Vid.ly will encode it in every format you need and give you a universal URL that you can use in your <code>video</code> tag, which will automatically choose the correct video type according to the user agent.</p>
<pre><code class="language-javascript">
&lt;video id="video" src="http://vid.ly/4m4e2n?content=video" controls="" preload="none"&gt;
Your browser does not support the HTML5 video element.
&lt;/video&gt;
</code></pre>
<h3>Heads Up</h3>
<p>The JavaScript in most of these snippets uses <a href="http://underscorejs.org/">Underscore</a>; stuff like <code>_.forEach</code> and <code>_.toArray</code> are utility functions from that library. Underscore encourages a functional style of programming that might look strange if you’ve never seen it before, but a little time invested in learning Underscore can save you a lot of time and lines of code. It’s worth checking out. For this article, you’ll find comments in the code to tell you what’s going on, and it should be pretty easy to understand.</p>
<p>One other caveat: The code here will run in most modern browsers, but no attempt has been made to make this completely cross-browser compatible. If your business really needs CSS animation to be synced with video <em>and</em> to run in almost every browser, then this library will not help you out. But for my business, and perhaps for yours, supporting only modern browsers is fine. And even with this restriction, plenty of material here is still worth learning.</p>
<h3>Control CSS Animations With JavaScript</h3>
<p><strong>JavaScript is the glue between video and CSS animation.</strong> There is no way to couple an animation to a video purely with CSS. Animation doesn’t start until a style is applied, and CSS gives you only so many ways to trigger extra styles (such as <code>:hover</code>). In order to sync animation to video, we will need to pause, stop, resume, skip to the middle, and even reverse running animations.</p>
<p>All of this is possible with JavaScript. So, the first step is to get the CSS animation out of the style sheet and into JavaScript. Every CSS animation has two parts. The first part is the keyframe and the properties used to configure how the animation behaves, such as duration, iteration and direction. The second part is what triggers the animation. Charlie.js will need to find both parts in the style sheets.</p>
<p>The first thing we need is a utility function to search through style sheets that are loaded on the page.</p>
<pre><code class="language-javascript">
findRules = function(matches){

		//document.stylesheets is not an array by default.
		// It's a StyleSheetList. toArray converts it to an actual array.
		var styleSheets = _.toArray(document.styleSheets),
		rules = [];

		// forEach iterates through a list, in this case passing
		//every sheet in styleSheets to the next forEach
		_.forEach(styleSheets, function(sheet){

		//This foreach iterates through each rule in the style sheet
		//and checks if it passes the matches function.
		_.forEach(_.toArray(sheet.cssRules), function(rule){
			if (matches(rule)){
				rules.push(rule);
			}
		});
	});
return rules;
}
</code></pre>
<p>The <code>findRules</code> function iterates through every rule of every style sheet and returns a list of rules that match the passed-in <code>matches</code> function. To get all of the keyframe rules, we pass in a function to <code>findRules</code> that checks whether the rule is a keyframe:</p>
<pre><code class="language-javascript">
// A little code to handle prefixed properties
	var KEYFRAMES_RULE = window.CSSRule.KEYFRAMES_RULE
		|| window.CSSRule.WEBKIT_KEYFRAMES_RULE
		|| window.CSSRule.MOZ_KEYFRAMES_RULE
		|| window.CSSRule.O_KEYFRAMES_RULE
		|| window.CSSRule.MS_KEYFRAMES_RULE,

		...

		var keyframeRules = findRules(function(rule){
			return KEYFRAMES_RULE === rule.type;
		}),

		...
</code></pre>
<p>At this point, we have the keyframes in JavaScript, but we still need the rest of the animation styles that define duration, iterations, direction and so on.</p>
<p>To find all of these classes, <strong>we again use the <code>findRules</code> function</strong> to go through every rule in every style sheet. This time, though, the <code>matches</code> function that we’ll pass in will check to see whether the rule has an <code>animationName</code> property.</p>
<pre><code class="language-javascript">
	...

	var animationStyleRules = findRules(function(rule){
		return rule.style &amp;&amp; rule.style[animationName(rule.style)];
	});

	...
</code></pre>
<p>The <code>animationsName</code> function is there to handle the prefixes, because the <code>animationName</code> property still requires prefixes in some browsers. That function looks like this:</p>
<pre><code class="language-javascript">
...

if (style.animationName) {
	name = "animationName"; }
else if (style.webkitAnimationName) {
	name = "webkitAnimationName"; }
else if (style.mozAnimationName) {
	name = "mozAnimationName"; }
else if (style.oAnimationName) {
	name="oAnimationName"; }
else if (style.msAnimationName) {
	name = "msAnimationName"; }
else {
	name = "";
}
return name;

...
</code></pre>
<p>Once the correct prefix has been determined, the name is cached and used for future look-ups.</p>
<p>Once the keyframes and animation styles have been collected, they get stuffed into an instance of a helper class and stored for Charlie.js to use later.</p>
<pre><code class="language-javascript">
var CSSAnimations = function(keyframes, cssRules){
	this.keyframes = keyframes;
	this.cssRules = cssRules;
};
</code></pre>
<h3>Get The Timing Information From The Data Attributes</h3>
<p>Timing information is attached to the element that will be animated using a data attribute (remember that we decided this when we were defining the API). So, we need to crawl the document and pull out the information. Any element that will be animated is marked with the class of <code>charlie</code>, which makes it pretty easy to find the data attributes we are looking for.</p>
<pre><code class="language-javascript">
var scrapeAnimationData = function() {

	/* Grab the data from the DOM. */
	var data = {};
	_.forEach(
		//loop through every element that should be animated
		document.getElementsByClassName("charlie"),

		//for each element, pull off the info from the dataset
		function(element) {

			/*
			* Creates an object of animation name: time, e.g.
			*
			* { swoopy: [
			*    { element: domElement,
			*  time: 6522 },
			*    { element: anotherElement,
			*  time: 7834 }]
			* }
			*/

			//     var names = element.dataset.animations.split(/\s*,\s*/),
			times = element.dataset.times.split(/\s*,\s*/),

			// creates an array of arrays, each one called a "tuple"
			// basically ties the time to the
			// animation name, so it looks like this:
			//[["zippy", 1], ["fade", 2] ... ]
			tuples = _.zip(names, times);

			/*
			* turn the tuples into an object,
			* which is a little easier to work with.
			* We end up with an object that looks like this:
			* {
			*  fade: [ {element: domElement, time: "1.2s"}, ... ],
			*  fling: [ {element: domelement, time: "2.4s"}, ... ]
			* }
			* So, we can reuse an animation on different elements
			* at different times.
			*/

			_.forEach(tuples, function(tuple){
				var name = tuple[0],
				time = tuple[1];
				data[name] = data[name] || [];
				data[name].push({
					element: element,
					time: time
				})
			});
		});
	return data;
},
</code></pre>
<p>This stores all of the timing information in an object with the animation’s name as the key, followed by a list of times and elements. This object is used to create several <code>Animation</code> objects, which are then stuffed into various data structures to make it easy and fast to look up which animations should be running in the big loop.</p>
<h3>The requestAnimationFrame Loop</h3>
<p>The heart of Charlie.js is a loop that runs whenever the video runs. The loop is created with <code>requestAnimationFrame</code>.</p>
<pre><code class="language-javascript">
tick: function(time){
	if (this.running){
		this.frameID = requestAnimationFrame(this.tick.bind(this));
		this.controller.startAnimations(time, video.currentTime);
	}
}
</code></pre>
<p>The <code>requestAnimationFrame</code> function is specifically <strong>designed to optimize any kind of animation</strong>, such as DOM manipulations, painting to the canvas, and WebGL. It’s a tighter loop than anything you can get with <code>setTimeout</code>, and it’s calibrated to bundle animation steps into a single reflow, thus performing better. It’s also better for battery usage and will completely stop running when the user switches tabs.</p>
<p>The loop starts when the video starts and stops when the video stops. Charlie.js also needs to know whether the video ends or jumps to the middle somewhere. Each of those events requires a slightly different response.</p>
<pre><code class="language-javascript">
video.addEventListener("play", this.start.bind(this), false);
video.addEventListener("ended", this.ended.bind(this), false);
video.addEventListener("pause", this.stop.bind(this), false);
video.addEventListener("seeked", this.seeked.bind(this), false);
</code></pre>
<p>As the video plays, the loop keeps ticking. Each tick runs this code:</p>
<pre><code class="language-javascript">
// allow precision to one tenth of a second
var seconds = roundTime(videoTime),
me = this;

//resume any paused animations
me.resumeAnimations();

/* start up any animations that should be running at this second.
* Don't start any that are already running
*/

if (me.bySeconds[seconds]){
	var animations = me.bySeconds[seconds],
	notRunning = _.filter(animations, function(animation){
		return !_.contains(me.running, animation);
	});

	/* requestAnimationFrame happens more than
	*  every tenth of a second, so this code will run
	*  multiple times for each animation starting time
	*/

	_.forEach(notRunning, function(animation){
		animation.start();
		me.running.push(animation);
	});
}
</code></pre>
<p>Everything we have done up to this point has been to support these few lines of code. The <code>seconds</code> variable is just the <code>video.currentTime</code> value rounded to the nearest tenth of a second. The <code>bySeconds</code> property is created from the time data that is scraped from the HTML &mdash; it’s just a quick way to grab a list of animations to start at a given time. The <code>running</code> array is a list of animations that are currently running. The <code>requestAnimationFrame</code> loop is really fast and runs many, many times a second, and Charlie.js only supports a resolution of one tenth of a second.</p>
<p>So, if one animation starts at the 2-second mark, then <code>requestAnimationFrame</code> will try to start it several times until the video has progressed to the next tenth of a second. To <strong>prevent animations from starting over and over again</strong> during that tenth of a second, they get put into the <code>running</code> array so that we know what is running and don’t start it again unnecessarily.</p>
<p>To start a CSS animation, just add the animation properties to an element’s style. The easiest way to do this is to just add the animation class to the element’s <code>classList</code>, and that is exactly what the animation’s <code>start</code> method does.</p>
<pre><code class="language-javascript">
start: function(){
	var me = this;
	//The name of the animation is the same as the class name by convention.
	me.element.classList.add(me.name);
	onAnimationEnd(me.element, function(){
		me.reset();
	});
}
</code></pre>
<p>The name of the animation is the same as the class name by convention.</p>
<h3>Pause And Resume Animations</h3>
<p>When the video stops, the animations should stop with it. There is a pretty straightforward way to do this using CSS animations: We just set the <code>animationPlayState</code> property of the element to <code>paused</code>.</p>
<pre><code class="language-javascript">
...

//method on the animation object
pause: function(){
	this.element.style.webkitAnimationPlayState = "paused";
	this.element.style.mozAnimationPlayState = "paused";
	this.element.style.oAnimationPlayState = "paused";
	this.element.style.animationPlayState = "paused";
},

resume: function(){
	this.element.style.webkitAnimationPlayState = "running";
	this.element.style.mozAnimationPlayState = "running";
	this.element.style.oAnimationPlayState = "running";
	this.element.style.animationPlayState = "running";
}

...

//called on the video "pause" event
while(animation = me.running.pop()){
	animation.pause();
	//keep track of paused animations so we can resume them later ...
	me.paused.push(animation);
}
</code></pre>
<p>The only trick here is to keep track of which animations have been paused, so that they can resume once the video starts again, like so:</p>
<pre><code class="language-javascript">
while (animation = me.paused.pop()){
	animation.resume();
	me.running.push(animation);
}
</code></pre>
<h3>How To Start An Animation In The Middle</h3>
<p>What if someone skips ahead in the video and jumps right into the middle of an animation? How do you start a CSS animation in the middle? The <code>animationDelay</code> property is exactly what we need. Normally, <code>animationDelay</code> is set to a positive number. If you want an animation to start three seconds after the animation style has been applied, then you’d set <code>animationDelay</code> to <code>3s</code>. But if you set <code>animationDelay</code> to a negative number, then it will jump to the middle of the animation. For example, if an animation lasts three seconds, and you want the animation to start two seconds in, then set the <code>animationDelay</code> property to <code>-2s</code>.</p>
<p>Whenever a user scrubs to the middle of the video, Charlie.js will need to stop all of the animations that are currently running, figure out what should be running, and then set the appropriate <code>animationDelay</code> values. Here is the high-level code:</p>
<pre><code class="language-javascript">
// 1. go through each to start
// 2. set the animation delay so that it starts at the right spot
// 3. start 'em up.

var me = this,
seconds = roundTime(videoTime),
toStart = animationsToStart(me, seconds);

// go through each animation to start
_.forEach(toStart, function(animation){

	//set the delay to start the animation at the right place
	setDelay(animation, seconds);

	//start it up
	animation.start();

	/* If the move is playing right now, then let the animation
	* keep playing. Otherwise, pause the animation until
	* the video resumes.
	*/

	if (playNow) {
	me.running.push(animation);

	} else {
		me.paused.push(animation);
		animation.pause();
	}
});
</code></pre>
<p>The <code>animationsToStart</code> function loops through a sorted list of animations and looks for anything that should be running. If the end time is greater than the current time and the start time is less than the current time, then the animation should be started.</p>
<pre><code class="language-javascript">
var animationsToStart = function(me, seconds) {

	var toStart = [];

	for(var i = 0; i &lt; me.timeModel.length; i++) {

		var animation = me.timeModel[i];

		//stop looking, nothing else is running
		if (animation.startsAt &gt; seconds) {
			break;
		}

		if (animation.endsAt &gt; seconds) {
			toStart.push(animation);
		}
	}
	return toStart;
};
</code></pre>
<p>The <code>timeModel</code> is a list of animations sorted by the times when the animations should end. This code loops through that list and looks for animations that start before the current time and end after the current time. The <code>toStart</code> array represents all of the animations that should be running right now.</p>
<p>Those values get passed up to the higher-level code, which then computes and sets the delay in the <code>setDelay</code> function.</p>
<pre><code class="language-javascript">
setDelay = function(animation, seconds) {
	var delay = -(seconds - animation.startsAt);
	delay = delay &lt; 0 ? delay : 0,
	milliseconds = Math.floor(delay * 1000) + "ms";
	animation.element.style.webkitAnimationDelay = milliseconds;
	animation.element.style.mozAnimationDelay = milliseconds;
	animation.element.style.oAnimationDelay = milliseconds;
	animation.element.style.msAnimationDelay = milliseconds;
	animation.element.style.animationDelay = milliseconds;
};
</code></pre>
<p>The <code>seconds</code> parameter is the current time in the video. Let’s say that the video is at 30 seconds, that the animation starts at 24 seconds and that it lasts for 10 seconds. If we set the delay to <code>-6s</code>, then it will start the animation 6 seconds in and will last another 4 seconds.</p>
<h3>Look At The Code For Yourself</h3>
<p>We’ve covered here how to use <code>requestAnimationFrame</code> to create a tight, optimized loop for animations, how to scrape keyframes and animation styles from the style sheet, how to start and stop animations with the video, and even how to start CSS animations in the middle. But to get to the point, we’ve skipped over quite a bit of glue code. Charlie.js is only a couple of hundred lines of code, and it is open source and commented thoroughly. You are welcome to <a href="https://github.com/sfioritto/charlie.js">grab the code</a> and read it.</p>
<p>You can even use it if you want, with a few caveats:</p>
<ul>
<li>Charlie.js was made for educational purposes. It was made to be read and for you to learn about CSS animations, videos, <code>requestAnimationFrame</code>, etc. Don’t just plug it into your production code unless you really know what you are doing.</li>
<li>Cross-browser support for animation is pretty good, and Charlie.js tries to be friendly to all the browsers when it can be. However, it hasn’t been heavily tested.</li>
<li>It eats up CPU, even if the video is paused. (This has something to do with CSS animations still rendering.)</li>
<li>The user can’t drag the seek bar while the video is unpaused. If they do, then the animations will start and overlap each other.</li>
<li>Charlie.js does not respond to changes in frame rate. So, if the video stutters or you want to slow down the rate of the video, then the animations will fall out of sync. Also, you can’t run video backwards.</li>
<li>Animations won’t start if the current tab isn’t set to the video, due to <code>requestAnimationFrame</code> not running unless the video tab is active. This could confuse users who switch back and forth between tabs.</li>
</ul>
<p>Some of these limitations can be fixed pretty easily, but Charlie.js was made for a very limited use case. I’ve put together a demo of Charlie.js in action so that you can see what it can do.</p>
<p><strong>The future of video in Web design is filled with possibilities</strong>, and I for one can’t wait to see what happens.</p>
<h4>Additional Resources</h4>
<ul>
<li><a href="http://www.sketchingwithcss.com/flexbox/">A demo of Charlie.js</a><br />
See what you can do with video and CSS3 animation.</li>
<li>“<a href="http://caniuse.com/css-animation">CSS3 Animation,</a>” Can I Use…</li>
<li>“<a href="http://www.planningforaliens.com/blog/2013/06/11/mac-pro/">How Does the New Mac Pro Site Work</a>,” Sean Fioritto</li>
<li>“<a href="http://coding.smashingmagazine.com/2011/03/11/syncing-content-with-html5-video/">Syncing Content With HTML5 Video</a>,” Christian Heilmann, Smashing Magazine</li>
<li>“<a href="http://css-tricks.com/controlling-css-animations-transitions-Javascript/">Controlling CSS Animations and Transitions With JavaScript</a>,” CSS-Tricks</li>
<li>“<a href="http://vimeo.com/59193899">Adrian Holovaty’s Talks SoundSlice</a>” (video), 37signals</li>
<li>“<a href="http://www.soundslice.com/tabs/1366/100-riffs-a-brief-history-of-rock-n-roll-tab/">100 Riffs: A Brief History of Rock n’ Roll</a>,” Soundslice<br />
An amazing demonstration of Soundslice</li>
<li>“<a href="http://www.youtube.com/watch?v=q7BjhX3K-5w">HTML5 Video With Filters and SVG</a>” (video), idibidiart</li>
<li>“<a href="http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/">requestAnimationFrame for Smart Animating</a>,” Paul Irish</li>
</ul>
<p><em>(al, ea, il)</em></p>
<hr />
<p><small>© Sean Fioritto for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/18/the-future-of-video-in-web-design/#comments" thr:count="0"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/18/the-future-of-video-in-web-design/feed/atom/" thr:count="0"/>
        <thr:total>0</thr:total>
    </entry>
            <entry>
        <author>
            <name>Chen Blume</name>
                                    <uri>http://www.on-pixel.com</uri>
                    </author>
                <title type="html"><![CDATA[Blueprints For Web And Print: Specctr, A Free Adobe Illustrator Plugin]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/15/specctr-an-adobe-illustrator-plugin-freebie/"/>
        <id>http://mgmt.smashingmagazine.com/?p=175975</id>
        <updated>2013-11-15T15:05:24Z</updated>
        <published>2013-11-15T15:04:25Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Freebies"/><category scheme="http://www.smashingmagazine.com" term="Graphics"/><category scheme="http://www.smashingmagazine.com" term="Fireworks"/><category scheme="http://www.smashingmagazine.com" term="Illustrator"/><category scheme="http://www.smashingmagazine.com" term="Photoshop"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/15/specctr-an-adobe-illustrator-plugin-freebie/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>Have you ever submitted design files to a development team for production and a few weeks later gotten something back that looks nothing like your original work? Many designers and design teams make the mistake of thinking that their work is done once they’ve completed the visual design stage.</p>
<p><strong>A design is more than a simple drawing on a canvas</strong> in Illustrator, Fireworks or Photoshop; it is a representation of function. “Form follows function” is a well-known principle, <a href="https://en.wikipedia.org/wiki/Form_follows_function">first coined</a> in 1896 by the architect Louis Sullivan. How will the website work? How will that section fold? What happens when you hover over this button? How does that menu function?</p>
<p>Designers also know that the details will make or break a product’s usability. But designers are also responsible for not letting those details fall through the cracks in production. <strong>Yes, those 5 pixels do matter! </strong>The development or production team also needs to understand how the product will work and what it will look like in every scenario and variation of the product’s use. Annotating all of these scenarios can be a nightmare, but this is where Specctr can help.</p>
<p>Specctr is a plugin for Adobe applications. (Currently, versions are available for Fireworks, Illustrator and Photoshop, the first of which you can read about in “<a href="http://www.smashingmagazine.com/2012/05/25/blueprints-for-the-web-specctr-adobe-fireworks-plugin/">Blueprints for the Web: Specctr Adobe Fireworks Plugin</a>”.) Specctr transitions a visual design to production by enabling you to specify form (spacing, width and height, colors, fonts, etc.) and function (hover states, transitions, user flows, etc.). It automatically generates a specification and creates a blueprint for the design, which saves time.</p>
<p><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/SmashingMagAi_013.png" alt="Specctr logo" /></p>
<p><strong>Note</strong>: The Specctr plugin for Adobe Illustrator has two versions, <em>Lite</em> and <em>Pro</em>. <a href="http://specctr.com/products.php">The Lite version is free for everyone</a> but has some limitations. The Pro version is more powerful, is paid and has an “Expand Canvas” feature, and you can change the font in which the specification is displayed. Specctr Pro has other advanced settings that can be configured in the “Spec Options” tab in the panel, including options for the colors in the three types of specifications, the color mode (RGB, CMYK, HSL, HSB), etc.</p>
<h3>Overview Of Specctr For Illustrator</h3>
<p>Adobe Illustrator is a favorite tool of many designers because of its flexibility and versatility. Whether you use Illustrator for Web, print, identity or packaging design, Specctr may be useful to you, and in this article we’ll show you how. This plugin includes:</p>
<ul>
<li>the width and height of elements;</li>
<li>text specifications (font family, font size, font color).</li>
</ul>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ai-specctr-lite-preview.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ai-specctr-lite-preview-500px.png" width="500" height="292" alt="" title="" /></a><br/><em>The main tab of the panel, the “Select Details” panel tab and the “Spec Options” panel tab in the Specctr Lite version. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ai-specctr-lite-preview-500px.png">see larger preview</a>)</em></p>
<p>The width and height of elements as well as the text-specification abilities are most common to a designer’s workflow, which is why we included them in the free version. These two features alone should save you a lot of time. Additionally, the free version has the “Expand Canvas” feature and the option to change a specification’s font.</p>
<h3>Requirements and Installation</h3>
<p>Specctr Lite can be <a href="http://specctr.com/products.php">downloaded for free</a> from our website (search for &#8220;Try Specctr Lite&#8221;). To use Specctr for Illustrator, you will need:</p>
<ul>
<li>a Mac or Windows machine;</li>
<li>a copy of Adobe Illustrator CS5, CS5.1, CS6 or CC (Creative Cloud version).</li>
</ul>
<p><strong>The installation process is pretty straightforward</strong>:</p>
<ol>
<li>Download the Specctr installer.</li>
<li>Double-click the downloaded ZXP file. The Adobe Extension Manager will open. Click on “Install.”</li>
<li>Restart Illustrator.</li>
<li>In Illustrator, go to <code>Window &rarr; Extensions &rarr; Specctr</code> in the menu to open the Specctr panel.</li>
</ol>
<p><strong>Note</strong>: If you are using Windows Vista+, you might need to launch the Adobe Extension Manager as an administrator, or else the extension could fail to install (this is a known limitation of the Adobe Extension Manager).</p>
<h3>A Quick How-To Guide</h3>
<p>After you install Specctr, you can spec a document in a few easy steps:</p>
<ol>
<li>Adjust your settings in the “Spec Options” tab.</li>
<li>Select the options you want to display.</li>
<li>Make room for your specifications (optional).</li>
<li>Spec away!</li>
</ol>
<p>The process of working with Specctr Lite and Pro is quite similar. The only difference is in functionality (Lite has fewer features).</p>
<h4>1. Adjust Settings in “Spec Options” Tab</h4>
<p>First, it’s a good idea to customize how the specifications will look. You can do this in the “Spec Options” tab in the Specctr panel. There, you can do the following:</p>
<ul>
<li>Control how your specifications will look by adjusting font, color, size and line weight.</li>
<li>Set the color mode in which you want to spec: <code>RGB</code> (both <code>rgb()</code> and <code>HEX</code> modes are available), <code>CMYK</code>, <code>HSL</code> or <code>HSB</code>.</li>
<li>Assign different colors based on the type of specification: type object, shape object, and spacing and dimensions.</li>
</ul>
<h4>2. Select the Options to Display</h4>
<p>In the “Select Details” tab in the panel, you can define (using simple checkboxes) which properties of objects to spec.</p>
<p>For example (as mentioned earlier), for shape objects, the following properties (or specification) can be generated by Specctr: fill color, fill style, stroke color, stroke size, opacity. And for text objects, the following properties (or specification) can be generated: font family, font size, font color, font style, text align, line height, letter spacing, opacity.</p>
<h4>3. Make Room for Your Specifications</h4>
<p>Optionally, you can expand the size of the artboard (or canvas) to make more room for the generated specifications. Use the numeric field next to the “Expand” button to increase the size (in pixels).</p>
<h4>4. Spec Away!</h4>
<p>Simply select any object(s) on the artboard, and then use one of the specification buttons: “Shape / Text,” “Width &#038; Height” or “Spacing.” Specifications will be generated automatically for the elements selected on the artboard.</p>
<p>You can select two objects (by holding down the <code>Shift</code> key) to spec the space in between them. If only one object is selected and you press the “Spacing” button, then the distance from the object to the artboard’s edges will be displayed.</p>
<p>Here’s a brief screencast of this workflow:</p>
<p><iframe width="500" height="282" src="//www.youtube.com/embed/T9LyhcqhOhU?rel=0" frameborder="0" allowfullscreen></iframe></p>
<h4>Other Features</h4>
<p>For maximum time-saving, you can spec <strong>multiple</strong> text and shape objects with one click. Simply select multiple (or all) objects and hit the spec button.</p>
<p>For better <strong>readability</strong>, line endings in Specctr will change depending on what you are spec’ing: a filled dot for text, an outlined circle for shape, and brackets for distance.</p>
<p><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/07/SmashingMagAi-13.png" alt="Spec line ends" width="500" height="343" /><br />
<em>Line endings automatically adjust based on shape, text and distance.</em></p>
<p>Your specifications are automatically <strong>organized</strong> and grouped into layers so that you can quickly turn their visibility off or delete them.</p>
<p><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/10/layers1a.png" alt="Specs in layers panel" width="500" height="291" /></a><br />
<em>Specifications organized into layers.</em></p>
<p>If many objects are close to each other, then there is a chance that specifications might overlap. To fix this issue, simply <strong>move</strong> and spread the specifications out. The arm that connects them to their object will always remain connected to the object, no matter where you move them on the artboard.</p>
<p>Please note that if you <strong>update</strong> an object after you’ve spec’d it, then the specification won’t update automatically; you must spec the object again. You don’t have to delete the old specification, though, because it will update with the new properties and remain in its current position.</p>
<h4>A Note About Units</h4>
<p>Specctr will use distance-based units based on the user’s settings in Illustrator (<code>Edit &rarr; Preferences &rarr; Units</code>). For Web documents, Specctr will always use pixels.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/08/ai-preferences-large.png" title="Illustrator preferences dialog. (view larger)"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/08/ai-prefrences.png" width="500" height="368" alt="Illustrator preferences." /></a><br />
<em>Illustrator’s “Preferences” dialog: Units.</em></p>
<h3>Different Specification Scenarios</h3>
<h4>Web Design</h4>
<p>There are plenty of reasons to use Illustrator for Web design. (Read Vincent Le Moign’s article “<a href="http://www.smashingmagazine.com/2011/01/17/productive-web-design-with-adobe-illustrator/">Productive Web Design With… Adobe Illustrator?</a>” to hear some of the arguments.) Illustrator is fast, reliable, reusable and especially useful for designers who create both wireframes and final designs.</p>
<p>Specctr was created with Web designers in mind because of the myriad of screens flows that have to be created and spec’d. Although spec’ing is usually a process that only large design teams do, I’ve found the plugin to be helpful on small teams as well. With technology advancing and our capability to create more complex graphics, transitions and animations growing, there is an increasing demand for designers to spec their work. Interactions, responsive design and hover states should become clearer with a few notes and annotations attached.</p>
<p>Here follows <strong>an example of a one-page Web design made in Illustrator</strong> and spec’ed using the Specctr plugin. The first screenshot shows the large-screen version, and the second shows the mobile-screen version.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ExampleWebsiteSpecctr-02.png" title="Specctr for Illustrator: web design example, big screen. (view large)"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/example-website-specctr-ai-02.500.png" alt="Example of a web site design spec'ed with Specctr" /></a><br />
<em>Example of a Web page spec’d with Specctr. The artboard contains the large-screen version; below it are shown three states of the same button (normal, :hover and :focus, and pressed). (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ExampleWebsiteSpecctr-02.png">View larger version</a>)</em></p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ExampleWebsiteSpecctr-041.png" title="Specctr for Illustrator: responsive web design example. (view large)"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/example-website-specctr-ai-041.500.png" alt="responsive design spec'd example." /></a><br />
<em>Example of a Web page spec’d with Specctr. The artboard contains the small-screen (i.e. mobile) version. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ExampleWebsiteSpecctr-041.png">View larger version</a>)</em></p>
<p><strong>Note:</strong> In Illustrator, you can use multiple artboards to create variants of the same Web page for different screen types; for example, desktop, tablet, mobile, etc.</p>
<p>Make sure to set up your document correctly for Web design work. Create Web documents with the “Align new objects to the pixel grid” option activated; always use whole pixel sizes for all objects; and select the RGB color mode. The “Align new objects to the pixel grid” option is <a href="http://help.adobe.com/en_US/illustrator/cs/using/WSf01dbd23413dda0e1e23acb6124476da654-7fea.html">especially important</a>.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/websettings3.png" title="Settings for web documents. (view large)"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/10/web-settings-3.500.png" alt="Web settings" width="500" height="700" /></a><br />
<em>My recommended settings for Web documents in Illustrator. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/websettings3.png">View larger version</a>)</em></p>
<h4>Print and Packaging Specification</h4>
<p>Unique print pieces (die cuts, special folds, etc.) require detailed instructions. Here is an example of a custom folder that was spec’d using Specctr for Illustrator.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/SmashingMagAi-14.png" title="view large"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/10/packaging-example.500.png" alt="Packaging spec example" width="500" height="549" /></a><br />
<em>A print design example. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/SmashingMagAi-14.png">View larger version</a>)</em></p>
<p>Setting up your document correctly for print design is important, too. Here are the settings that I often use:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/printsettings.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/10/print-settings.500.png" alt="Print settings" width="500" height="515" /></a><br />
<em>My recommended settings for print documents in Illustrator (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/printsettings.png">View larger version</a>)</em></p>
<h4>Branding Guideline Book</h4>
<p>A brand is the public face of the company. It conveys the mood and tone of the company and covers every detail of its communication with the public. A branding book is a vital step in a branding project because it establishes the rules and teaches collaborators how to use the new visual language; a rebranding campaign is only successful if it is used consistently and widely.</p>
<p>A brand book usually includes the logo, fonts, colors, textures and patterns, photographic and image styles, language and tone. The guidelines can get quite detailed and long.</p>
<p>Here is <strong>an example of a very brief brand book that uses Specctr</strong> for the nitty-gritty details:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/BrandGuidlinesExample.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/BrandGuidlinesExample.png" alt="Brand Guidlines" width="500" height="1241" /></a><br />
<em>Specctr for Illustrator can help you create a brand book.</em></p>
<p>Here are a few brand guidelines:</p>
<ul>
<li>“<a href="http://www.admin.cam.ac.uk/offices/communications/services/identityguidelines/">Identity Guidelines</a>,” Office of External Affairs and Communications, University of Cambridge</li>
<li>“<a href="http://mailchimp.com/about/brand-assets/">Brand Assets</a>,” MailChimp</li>
<li>“<a href="http://issuu.com/logobr/docs/brandbook_nikefootball">Brand Standards</a>,” Nike Football</li>
<li>“<a href="http://www.umb.edu/editor_uploads/images/creative_services/UMassBostonbrandmanual1-10.pdf">Brand Manual</a>” (PDF), University of Massachusetts Boston</li>
<li>“<a href="http://brandcenterdl.adobe.com/Corpmktg/Brandmktg/Campaign_Assets/guidelines/corporate/corporate_brand_guidelines.pdf">Adobe Corporate Brand Guidelines</a>” (PDF), Adobe</li>
<li>“<a href="http://www.barbican.org.uk/branding/Barbican_Guidelines.pdf">Branding Guidelines</a>” (PDF), Barbican</li>
</ul>
<p>To learn more about branding, I recommend Kat Neville’s article “<a href="http://www.smashingmagazine.com/2010/07/21/designing-style-guidelines-for-brands-and-websites/">Designing Style Guidelines for Brands and Websites</a>.”</p>
<h3>Conclusion</h3>
<p>Being a successful designer takes not only creativity and design skills but the follow-through to see a project come alive just as you imagined it. A designer may create a well-crafted website or a beautiful logo or an elegantly packaged product, but chances are they won’t be the one bringing it to life.</p>
<p>Communicating and explaining your design both verbally and visually is a requirement for precise and successful results. This is especially true for large teams spread out over the globe. We hope the <a href="http://www.specctr.com/products.php/">Specctr plugin for Illustrator</a> helps you with this important task.</p>
<h4>Plans for the Future?</h4>
<p>Here’s what the Specctr team is working on next:</p>
<ul>
<li>CSS exporting (the objects you spec will be the ones that are added to your CSS export);</li>
<li>Relative (i.e. percentage-based) spacing, to help you with responsive design tasks;</li>
<li>More options for iOS and Android design specs.</li>
</ul>
<p>Please <a href="http://specctr.com/support.php">let us know</a> which features you would like to see added to the next version of Specctr’s panels! You can also leave a comment here. We’d appreciate your feedback.</p>
<p><em>(mb, al, il)</em></p>
<hr />
<p><small>© Chen Blume for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/15/specctr-an-adobe-illustrator-plugin-freebie/#comments" thr:count="27"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/15/specctr-an-adobe-illustrator-plugin-freebie/feed/atom/" thr:count="27"/>
        <thr:total>27</thr:total>
    </entry>
            <entry>
        <author>
            <name>Bryson Meunier</name>
                                    <uri>http://brysonmeunier.com</uri>
                    </author>
                <title type="html"><![CDATA[SEO For Responsive Websites]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/15/seo-for-responsive-websites/"/>
        <id>http://mgmt.smashingmagazine.com/?p=176045</id>
        <updated>2013-11-15T11:54:16Z</updated>
        <published>2013-11-15T11:18:42Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Mobile"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/15/seo-for-responsive-websites/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>When Google announced its preference for user-friendly responsive websites in June 2012, I immediately saw an influx of posts that equated responsive design with search engine optimization. This is unfortunate because, while responsive websites can be SEO-friendly, some responsive websites are not.</p>
<p>I’ve detailed some of the common errors that give responsive websites problems in search results in an <a href="http://searchengineland.com/how-common-are-seo-problems-with-responsive-web-design-152672">article on Search Engine Land</a> earlier this year, so it’s nice to be able to do a more in-depth SEO audit of a responsive website here on Smashing Magazine.</p>
<p>I know <strong>not everyone’s definition of SEO is the same</strong>, so for those of you who don’t know my work, it should be emphasized that fixing all of these issues with SEO will improve the user experience in general; and like <a href="http://www.smashingmagazine.com/2012/12/21/what-heck-seo-rebuttal/">most credible SEOs these days</a>, I don’t believe in manipulating search engine algorithms for short term ranking benefits.</p>
<p>The website I’d like to audit today is the US version of <a href="http://www.disneyjunior.com">Disney Junior</a>. I’ve chosen this website for three reasons: it’s not run by a client or a partner; it exhibits a lot of the SEO issues of many responsive websites; and my two and four year olds are huge fans of the brand and often use my smartphone or our family iPad to visit it. Hopefully, Disney can use this free advice to make its website better for my kids and kids like them who search.</p>
<p>This audit of Disney’s beautiful but often frustrating website shows that <strong>mobile SEO doesn’t end once you’ve made a website responsive</strong>, and it gives Disney a framework to make its website more usable and findable on search engines.</p>
<h3>Is The Website Indexed?</h3>
<p>Disney Junior doesn’t seem to have any real issues with indexing; many of its pages have been indexed by Google. See for yourself with a simple <code>site:domain.com</code> search, or verify it in Google’s Webmaster Tools if you use it.</p>
<p><a href="https://www.google.com/search?q=site:disneyjunior.com"><img class="size-full wp-image-139035" alt="Disney junior website google index" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disneyjunior-site-google-index-500-opt.png" width="500" height="755" /></a><br />
<em>Google has indexed approximately <a href="https://www.google.com/search?q=site%3Adisneyjunior.com">1,630 pages</a> of Disney Junior. However, the descriptions indicate that we might have problems with content parity.</em></p>
<p>Obviously <strong>a website that isn’t in a search engine’s index will be invisible</strong> when people search for it. This is true for responsive websites as well as for websites that use dynamic serving or dedicated mobile URLs. That being said, this tends to be more of a problem with mobile URLs because of the common practice of intentionally <code>nofollow</code>’ing mobile websites in the <code>robots.txt</code> file in order to prevent the mobile pages from competing with the “canonical” pages for link equity.</p>
<p>This practice is misguided because bidirectional annotations (or <a href="http://searchengineland.com/switchboard-tags-like-canonical-tags-but-for-mobile-seo-127676">switchboard tags</a>) can harness that link equity and bring mobile URLs into search results, but that’s neither here nor there when it comes to responsive websites.</p>
<p>While Disney Junior is indexed, some responsive websites, such as <a href="http://ididthis.idispharma.com/">Idis</a> are not so lucky. Idis is responsive and innovative, yet only one page of the website has been indexed by Google. Because the website is dynamic and because <a href="https://developers.google.com/webmasters/ajax-crawling/docs/specification"><code>_escaped_fragment_</code> hasn’t been used</a>, the URL does not change when a user clicks on different website elements, thus depriving search engines of deep links to include in their indices. If anyone searches for text on any of these pages, they won’t find this interactive, award-winning website.</p>
<p>This could happen to any website that doesn’t have static URLs, of course, but mobile SEO isn’t done once the developer has decided whether to make their website responsive or use dynamic serving or use dedicated mobile URLs.</p>
<h3>Is The Website Crawlable?</h3>
<p>In order for any website, responsive or not, to be indexed, Google must be able to crawl the website — that is, to follow a link to every unique piece of content and then store that new URL.</p>
<p>To check this, run any website crawler, such as <a href="http://home.snafu.de/tilman/xenulink.html">Xenu</a> or <a href="http://www.screamingfrog.co.uk/seo-spider/">Screaming Frog</a>. I prefer Rob Hammond’s <a href="http://robhammond.co/tools/seo-crawler">SEO Crawler</a> for mobile SEO audits because it allows you to set the smartphone Googlebot as your preferred crawler. The number of URLs is limited but enough to give you a pretty good idea of any crawlability issues. If you own the website, verifying it <a href="http://www.google.com/webmasters/">with Google</a> and <a href="http://www.bing.com/toolbox/webmaster/">with Bing</a> is imperative. Both search engines have tools for developers that specify the crawl errors they encounter, and Google even lets you tell it to ignore certain parameters that might be causing problems. If you don’t own the website or can’t verify it, you can still identify most problems by crawling the website as described above.</p>
<p>When I crawled Disney Junior, it quickly became apparent that the <strong>content is hosted on several URLs</strong>: <code>DisneyJunior.com</code>, <code>DisneyJunior.Disney.com</code>, <code>WatchDisneyJunior.Go.com</code> and <code>Disney.Go.com/DisneyJunior</code>. This could hinder a search engine from assigning page authority, because a search engine’s spider has a <a href="http://www.blindfiveyearold.com/crawl-optimization">limited crawl budget for every website</a>, based on that website’s PageRank, so if you’re splitting your PageRank between four URLs and three domains, then you’re possibly presenting to Google a website architecture that is less than optimal. More on this later in the section about duplicate content.</p>
<p>Disney’s URLs themselves don’t seem to have any major issues with crawlability because they are mainly static URLs, which search engines have an easier time with. However, the site map could certainly be improved upon. Search engines jointly announced <a href="http://sitemaps.org">Sitemaps</a> a few years ago as the convention for finding content on websites to index. <code>DisneyJunior.Disney.com</code> does have a site map, but there are a few problems with it, the biggest being that it’s a video site map that contains more than just videos.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/disney-junior-video-sitemap1.jpg"><img class=" wp-image-138967" alt="disney junior video site map" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-video-sitemap-500-opt.png" width="500" height="388" /></a></p>
<p>Site maps are a way for site owners to communicate directly with search engines, so making the information as accurate as possible and not confusing search engines are imperative. Google has <a href="https://support.google.com/webmasters/topic/20986?hl=en&amp;ref_topic=8476">site maps for the many different kinds of content</a> included on Disney Junior, so presenting separate maps for images, videos, HTML documents and so on would be best.</p>
<p>Crawlability is not a mobile-specific problem, but getting it wrong can harm a website intended for mobile users just as easily as it can harm a traditional website, and it needs to be done right regardless.</p>
<h4>Recommendation</h4>
<ul>
<li>Disney should consider hosting all content on a single subdomain to ensure that search engines can properly identify page authority and to ensure that all relevant URLs are crawled efficiently.</li>
<li>Disney should also consider breaking down its single video site map, which contains all types of content, into individual site maps for HTML content, image content, video content, etc.</li>
</ul>
<h3>Is The Website Readable Without Images, Flash Or JavaScript Enabled?</h3>
<p>A search engine cannot factor what it can’t see into the overall relevance of a page. And while Google can do some amazing things with optical character recognition in Google Glass, Google Drive and Google Goggles, it still <a href="http://www.youtube.com/watch?v=Ji05CqWi3ws">only reads text</a> for Google Search. As it says in its “<a href="https://support.google.com/webmasters/answer/35769#1">Webmaster Guidelines</a>”:</p>
<blockquote>
<ul>
<li>Create a useful, information-rich website, and write pages that clearly and accurately describe your content.</li>
<li>Think about the words users would type to find your pages, and make sure that your website actually includes those words within it.</li>
<li>Try to <strong>use text instead of images</strong> to display important names, content, or links. The Google crawler doesn’t recognize text contained in images. If you must use images for textual content, consider using the “ALT” attribute to include a few words of descriptive text.</li>
</ul>
</blockquote>
<p>Is Disney’s responsive website text-based and information-rich, and does it include terms that people would actually use when searching? Not really. If we look at the website through a simple text browser, like <a href="http://www.seo-browser.com">SEO-Browser.com</a>, to get a better sense of how a search engine sees the website, then we get a much different picture than accessing it in a browser:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-text-comparison-opt.png"><img class="size-full wp-image-138968 " alt="disney junior text comparison" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-text-comparison-500-opt.png" width="500" height="452" /></a></p>
<p>Unlike websites that embed keywords in images or in Flash, search engines aren’t blocked from seeing relevant content here — there’s just not a lot of relevant content to see. The website isn’t readable in this case because there are no words to read.</p>
<p>If we look at a deeper-level page, we’d see some graphic text that search engines would have a hard time accurately processing.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/sandwich-illustration.jpg"><img class="size-full wp-image-139037" alt="2013-09-23_15-47-07" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/browser-search-engine-view-500-opt.jpg" width="500" height="259" /></a></p>
<p>The text beginning with “Watch Sam Sandwich…” is accessible, but the words in the logo “The Bite-Sized Adventures of Sam Sandwich” are not because they are embedded as a graphic.</p>
<h4>Recommendation</h4>
<ul>
<li>At the very least, Disney should make embedded text accessible as <code>alt</code> text.</li>
<li>When the text is substantial, the developer should consider making it accessible in a Web font, rather than as an embedded graphic.</li>
<li>Furthermore, the volume of relevant keywords, such as “games for kids” and other non-brand words, should be increased. This could be done by slightly expanding the text block on each page or, ideally, by designing the page to include some scannable text, keeping progressive enhancement in mind.</li>
</ul>
<h3>Is The Website Easy To Link To And Share?</h3>
<p>Many websites, both responsive and not, have URLs that don’t seem to be intended for human consumption. This is detrimental to SEO, of course, mostly because the URLs aren’t memorable and are difficult to share. Given how important search engines view sharing and linking when ranking pages, the more we can do to facilitate linking and sharing, the better off we’ll be in search results.</p>
<p>The print and video URLs for Disney Junior fall into this category, adding random characters to otherwise memorable paths (<code>http://disneyjunior.com/print/stethoscope-4e4e43e2e8368d71cf2086da</code>). For the most part, though, the URLs include keywords and are easy for users and search engines to understand.</p>
<p>The website could go one step further and include social bookmarklets to <strong>enable users to share content on social networks</strong>. Disney Junior has an active presence on Facebook, Twitter and YouTube, so its creators must understand the value of social media. But they might not understand that leveraging social media is becoming important to organic discovery and search. And given that <a href="http://techcrunch.com/2013/08/13/facebook-mobile-user-count/">78% of Facebook’s user base is mobile</a> and that <a href="http://www.comscore.com/Insights/Presentations_and_Whitepapers/2013/2013_Mobile_Future_in_Focus">mobile users spend more time</a> on social networks than PC users, then helping mobile searchers share content whenever they’d like makes sense.</p>
<p>This isn’t a tutorial on how to make social buttons work on a responsive website, but <a href="https://developers.facebook.com/docs/web/gettingstarted/mobile/">Facebook’s mobile “Like” button works on responsive websites</a>. However, for performance considerations, it&#8217;s a good idea to use <a href="http://cferdinandi.github.io/social-sharing/">social sharing buttons</a> or <a href="http://filamentgroup.com/lab/socialcount/">SocialCount</a> that use lazy loading to load the actual social scripts on click. If you use a third-party plugin, such as AddThis, <a href="http://bryanhadaway.com/how-to-make-addthis-responsive/">there are ways</a> to make those compatible with a responsive website as well.</p>
<h4>Recommendation</h4>
<p>To increase referrals from social networks and to facilitate content discovery, Disney Junior should incorporate social-sharing buttons that are responsive, that add to the overall experience but that don’t significantly increase page-loading time.</p>
<h3>Does The Website Display Content For Users’ Needs, Regardless Of The Device Used?</h3>
<p>Those who champion “<a href="http://bradfrostweb.com/blog/mobile/content-parity/">content parity</a>” have a worthy cause in making websites accessible to everyone, regardless of device. Unfortunately, the issue is a <a href="http://marketingland.com/book-review-content-strategy-for-mobile-by-karen-mcgrane-34269">little complicated</a>. Making content available on all platforms is sometimes good for users, other times not.</p>
<p><strong>Disney Junior is fairly representative. It deprives users of relevant content</strong>, fails to connect relevant content to users who need it, and gives users content that they have no chance in the world of ever using. Unfortunately, in my experience this is fairly typical of responsive websites, many of which don’t go far enough to make all content accessible, regardless of device, and which provide content that’s unusable on mobile devices.</p>
<p>Google sees one weakness so often on mobile websites that it has threatened to penalize for it in smartphone search results: unplayable videos. In June 2013, <a href="https://developers.google.com/webmasters/smartphone-sites/common-mistakes">Google said</a> this:</p>
<blockquote><p>&#8220;We recommend using HTML5 standard tags to include videos and avoid content in formats, such as Flash, that are not supported by all mobile devices. Regardless, try your best to offer smartphone users the best experience possible to make sure that the videos are playable on as many devices as possible.&#8221;</p></blockquote>
<p>So, when I encounter many screens like the following when trying to play Disney Junior videos, I get a little concerned:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/disney-junior-unplayable-videos2.jpg"><img class="size-full wp-image-139038" alt="Telling users that their device does not support something may lower your ranking in Google smartphone search (large preview)." src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-unplayable-videos-500-opt.png" width="500" height="296" /></a><br />
<em>Not supporting a piece of content for mobile users could lower your ranking in smartphone search results.</em></p>
<p>In some cases, though, <strong>Disney Junior goes too far with content parity</strong>. The four main sections of the website are games, videos, printables and a live feed. The problem is that unless a user is not only aware of <a href="http://www.google.com/cloudprint/learn/">Google Cloud Print</a> but is one of the handful of people who has it installed on their device, they won’t have any way to print the coloring pages or other printables.</p>
<p>I have no idea how many people have actually printed these PDFs from mobile devices, but I’m guessing that the vast majority of people who attempt to access this content leave in frustration. I have no evidence that Google actively penalizes a website for unplayable videos, but it announced that it would more than four months ago, and it could start any day. Regardless of the impact on ranking, fixing this issue would make the website more usable to whoever visits.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/disney-junior-printable-user-flow2.jpg"><img class="size-full wp-image-139039 " alt="One quarter of the content on DisneyJunior.com is devoted to content that most users will not be able to use on mobile devices (large preview)." src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-printable-user-flow-500-opt.png" width="500" height="291" /></a><br />
<em>One quarter of the content on Disney Junior is inaccessible on mobile devices.</em></p>
<p>No doubt, printables and coloring pages are a popular feature on desktops and laptops, and users actively look for such content. On mobile devices, it’s an entirely different story.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/Bing-Ad-Intelligence-Coloring-Pages.jpg"><img class="size-full wp-image-138973" alt="Bing Ad Intelligence Coloring Pages Search Volume by Device" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Bing-Ad-Intelligence-Coloring-Pages-opt.png" width="266" height="134" /></a><br />
<em><a href="http://advertise.bingads.microsoft.com/en-us/bing-ads-intelligence">According to Bing Ads Intelligence</a>, which lets you see search volume by device, less than 5% of the total search volume for “coloring pages” comes from mobile devices. The reason is that most mobile devices aren’t connected to a printer, thus rendering such content unusable.</em></p>
<p>It’s worth noting that Disney has made huge strides on its responsive website at Disney.com since I <a href="http://searchengineland.com/how-common-are-seo-problems-with-responsive-web-design-152672">addressed this issue</a> in April 2013. None of its Flash games had been accessible to smartphone users, and it’s since made most of them compatible with HTML5. So, fixing these issues that plague both responsive and dedicated mobile websites is possible, but it won’t happen by itself.</p>
<p>Making this content available to all users is fine, but if Disney is going to do this, then it needs to explain that, before printing it from a mobile device, the user will have to <strong>download Google Chrome and/or the Google Cloud Print app</strong> and connect their device to a printer. If Disney doesn’t do that, then a lot of confused and unhappy kids will be left staring at a PDF on their mobile device, wondering how to print it. Disney could also consider making the feature less prominent on its home page for mobile users.</p>
<p>Finally, what’s missing from Disney Junior’s responsive website is any mention of the mobile content that is actually available. Assumptions on user behavior are always tricky, but in this case it&#8217;s quite safe to assume that mobile users would be looking more for apps and mobile games than for printables. However, the first search result for “Disney junior apps” in Google takes the user to a non-responsive page, before giving them an error message due to the absence of Flash.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/disney-junior-apps-user-flow.jpg"><img class="size-full wp-image-138975" alt="disney junior apps user flow" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-apps-user-flow-opt.png" width="392" height="342" /></a><br />
<em>“Dad, what is this?!” says my four-year-old son as he tries to watch Disney Junior on my smartphone but is redirected to a page that tells him to download Flash.</em></p>
<p>What’s more, when it comes to “mobile games,” a phrase that people search for more than 12,000 times a month, Disney is nowhere to be found. It’s a shame, because Disney’s games, being compatible with smartphones, are relevant to the term, but they won’t be found in relevant search results because the term isn’t included. And not appearing in relevant search results is definitely not search engine optimization.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/disney-mobile-searches.jpg"><img class="size-full wp-image-138977" alt="disney mobile searches" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-mobile-searches-500-opt.png" width="500" height="604" /></a><br />
<em>These figures for search volume of Disney-related keywords by platform show that mobile users often search for different things and at a different frequency than users on desktops and laptops.</em></p>
<h4>Recommendation</h4>
<p>Disney Junior has three opportunities to improve the accessibility and relevance of its responsive website:</p>
<ul>
<li>Ensure that all videos and games are playable on most smartphones before Google makes good on its promise to penalize websites for unplayable videos. This will also improve the user experience and reduce the number of frustrated visitors.</li>
<li>Rethink the website’s information architecture. Highlighting printables and coloring pages for mobile users doesn’t make sense if these users have no way to print them from their device.</li>
<li>Ensure that the website contains all relevant keywords, regardless of platform, so that the many people who search with platform-specific keywords, like “mobile games” and “iphone apps,” can find relevant content on Disney Junior.</li>
</ul>
<h3>Does The Website Load Quickly?</h3>
<p>When I echoed the claim of Guy Podjarny, Akamai’s evangelist, <a href="http://searchengineland.com/when-responsive-web-design-is-bad-for-seo-149109">in Search Engine Land</a> that responsive websites are often bloated and slow, I was met with a lot of hostile comments. Many thought I was saying that responsive websites cannot be fast. Of course they can be made fast; unfortunately, <a href="http://www.akamai.com/dl/akamai/wp_responsive_web_design.pdf">most are not</a> (PDF).</p>
<p>This is not just bad for performance, but can be detrimental to SEO as well. When Google pointed out common mistakes that it might soon penalize for, it put slow-loading pages on the hit list. Fortunately, Google has given developers many resources to make their websites faster, including the <a href="http://developers.google.com/speed/pagespeed/insights/">PageSpeed Insights</a> tool. Following the recommendations made by this tool will go a long way to making your website load in one second or less, which is what Google recommends for optimum mobile performance.</p>
<p>Disney Junior takes <a href="http://mobitest.akamai.com/m/results.cgi?testid=130924_MV_AR">more than seven seconds to load</a> on average, and Google gives it a score of <a href="http://developers.google.com/speed/pagespeed/insights/?url=http%3A%2F%2Fwww.disneyjunior.com">71 out of 100</a> for page speed.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-responsive-mobitest-large-opt.png"><img class="size-full wp-image-138978" alt="disney junior responsive mobitest" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-responsive-mobitest-500-opt.png" width="500" height="272" /></a><br />
<em>Akamai’s Mobitest tool is great for showing how long a page takes to load on mobile devices.</em></p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/disney-junior-page-speed-test-google.jpg"><img class="size-full wp-image-138979" alt="disney junior page speed test google" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-junior-page-speed-test-google-500-opt.png" width="500" height="363" /></a><br /><em>Google’s PageSpeed Insights follows the color coding of stop lights to indicate the priority of its recommendations.</em></p>
<p><a href="http://www.sitepoint.com/optimizing-responsive-design-websites-for-performance/">Much</a> <a href="http://bradfrostweb.com/blog/post/prioritizing-performance-in-responsive-design/">has</a> <a href="http://mobile.smashingmagazine.com/2013/09/16/responsive-images-performance-problem-case-study/">been</a> <a href="http://www.lukew.com/ff/entry.asp?1760">written</a> in the design community about the performance of responsive websites. At the very least, a responsive website should follow Google’s guideline of loading in less than a second.</p>
<h4>Recommendation</h4>
<p>Disney Junior should follow Google’s PageSpeed Insights and optimize its images, eliminate render-blocking JavaScript and CSS in content above the fold, and reduce page-loading time overall to one second or less.</p>
<h3>Does The Website Try To Get You To Download An App Instead Of Showing What You Asked For?</h3>
<p><a href="http://wtfmobileweb.com/">WTF Mobile Web</a> lists many websites that attempt to get users to download an app, instead of immediately showing them relevant content — a technique known as a door slam. <a href="http://www.rottentomatoes.com/">Rotten Tomatoes</a> is typical:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/Screenshot_2013-02-02-14-36-03.png"><img class="size-full wp-image-138981" alt="rotten tomatoes app interstitial" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/rotten-tomatoes-app-500-opt.png" width="500" height="889" /></a><br />
<em>An app interstitial is shown to smartphone users who access Rotten Tomatoes’ website.</em></p>
<p>This used to be merely annoying to users — until June 2013, when Google added it to its list of things to penalize websites for. Now it should annoy all website owners, too.</p>
<p>These door slams usually happen when the website detects the user agent to be a mobile device. They’re rarer on responsive websites, in my experience, because most owners of responsive sites are happy to let users freely access their content, instead of trying to persuade them to switch to the app experience.</p>
<p>Disney Junior is the exception to the rule. If you attempt to watch one of its videos on your mobile device, the page will redirect you to an app. If you’re on an Android device, you will be redirected to an app that doesn’t exist:</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/disney-app-interstitial.jpg"><img class="size-full wp-image-138983" alt="watch disney junior mobile" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/watch-disney-junior-mobile-opt.png" width="267" height="474" /></a><br />
<em>Android users who click on the “Watch Disney Junior” link on the home page are greeted with this message.</em></p>
<p>If you include app interstitials on your responsive website, then now is the time to consider whether their business value outweighs the prospect of not appearing as often in Google search results for relevant queries on smartphones. As far as I can tell, Google hasn’t yet begun to penalize for this infraction; however, as with unplayable videos, it’s only a matter of time before it does.</p>
<h4>Recommendation</h4>
<p>Disney Junior should remove the app interstitial or at least turn it into a banner that is not disruptive. Smart banners are available <a href="https://developers.google.com/mobile-ads-sdk/docs/admob/smart-banners">on Android</a> and <a href="https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html">on iOS</a> as replacements for app interstitials.</p>
<p>Including a smart banner on iOS is as simple as adding the following meta tag to the head of the page, with the <a href="https://developer.apple.com/library/mac/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html">relevant App Store details</a>:</p>
<pre><code class="language-markup">
&lt;meta name="apple-itunes-app" content="app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL"&gt;
</code></pre>
<p>Adding a smart banner on Android is not quite as simple, but it can be done <a href="https://developers.google.com/mobile-ads-sdk/docs/admob/smart-banners">through AdMob</a>. Some developers have <a href="http://jasny.github.io/jquery.smartbanner/#android">simulated iOS’ banner</a> on Android using jQuery.</p>
<h3>Does The Website Contain Duplicate Content?</h3>
<p>Duplicate content has been preventing relevant pages from ranking for given queries long before smartphones came around. Now, it gets even more complicated. In case you don’t know, <a href="https://support.google.com/webmasters/answer/66359?hl=en">duplicate content</a> is a single piece of content that exists on more than one URL. It makes a page less competitive because its PageRank indicators are dispersed.</p>
<p>Mobile subdomains are usually the culprit of duplicate content, as my <a href="http://searchengineland.com/7-real-mobile-duplicate-content-seo-issues-119338">case studies  demonstrate</a>. However, just because a website is responsive doesn’t mean that duplicate content is not possible. In fact, checking for it is important for any website, mobile-friendly or not. Neglecting it means letting Google itself identify the canonical page for a given piece of content, which doesn’t always end well for the website owner.</p>
<p>We shouldn’t take chances. Instead, we should <strong>ensure that search engines can understand which pages are intended for users</strong> and which pages are just copies of canonical pages. We can give search engines as many signals as possible to alert them to canonical pages (such as by including canonical tags, by adjusting the handling of parameters in Webmaster Tools, and so on).</p>
<p>As mentioned earlier, Disney Junior has quite a bit of duplicate content. But according to the source code, it has added <a href="https://support.google.com/webmasters/answer/139394?hl=en">canonical tags</a> to tell Google and Bing which pages to rank. So, we have no recommendation for Disney on this one.</p>
<p>If you’re not familiar with canonical tags, it’s as simple as adding the following tag to the head of any duplicate page:</p>
<pre><code class="language-markup">
&lt;link rel="canonical" href="http://www.disneyjunior.com"/&gt;
</code></pre>
<p>The URL referenced in this tag should be the canonical URL for the given content. Some of Disney Junior’s properties do have a slight problem of duplicate content. <code>Chuggington.com</code>, for example, has equivalent content on <code>DisneyJunior.com/Chuggington</code>. If Disney wanted to set <code>Chuggington.com</code> as the canonical URL, it would simply add the following tag to <code>DisneyJunior.com/Chuggington</code>:</p>
<pre><code class="language-markup">
&lt;link rel="canonical" href="http://www.chuggington.com"/&gt;
</code></pre>
<h3>Does The Website Take Advantage Of Mobile Devices To Deliver Extra Value?</h3>
<p>Disney Junior doesn’t show anything unique to mobile devices. This might or might not be intentional, but it ignores opportunities to delight the consumer with device-specific content.</p>
<p>Back in 2008, one analyst predicted that <a href="http://adage.com/article/al-ries/mobilenet-promises-big-medium/126880/">mobility would create an entirely new Internet</a>, filled with voice-recognition apps, GPS and scannable content, and hosted on <code>.mobi</code> domains. He called it the mobile ’net and thought that it would be separate from the Internet as we knew it.</p>
<p>It reads a little like science fiction today, with silver mylar-clad people jetting around in flying cars and on hoverboards, but the author was spot on with one thing. He basically predicted Uber, the mobile ride-sharing app that is disrupting the taxi industry. And the article foreshadows the purchase of mobile-first photo app Instagram by Facebook for $1 billion in April 2012. Smartphones and tablets have different properties than PCs, and they are often used in situations where a PC would be impractical, thus instilling behaviors and patterns that previously did not exist on the Internet.</p>
<p>GPS enables users to find things around them with Google and Bing, and search data is showing that users are taking advantage of it, using terms like “navigate to,” “closest” and “near me” primarily on smartphones and tablets. Shopping-related searches are <a href="http://www.google.com/think/research-studies/creating-moments-that-matter.html">two times more likely</a> to happen in-store now, and <a href="http://adwords.blogspot.com/2013/09/new-research-shows-that-70-of-mobile.html">70% of mobile searchers</a> call businesses directly from search results — something they can’t really do on a PC. Granted, many people search for the same things on their mobile devices as they do on their desktop computers, and they often do it when they’re not on the go. However, <a href="http://www.google.com/think/research-studies/creating-moments-that-matter.html">17% of them</a> are on the go, and all of them have access to things like GPS, the camera, the accelerometer and the phone, which aren’t available on desktops and laptops.</p>
<p>Today, these mobile-first experiences are sometimes built on the Web (i.e. not a separate mobile Web) and more often in apps. From an SEO standpoint, they make the most sense on the Web. In its “<a href="https://support.google.com/webmasters/answer/35769?hl=en">Webmaster Guidelines</a>,” Google says, “Think about what makes your website unique, valuable, or engaging. Make your website stand out from others in your field.” And it echoes this sentiment in its “<a href="https://static.googleusercontent.com/external_content/untrusted_dlcp/www.google.com/en/us/webmasters/docs/search-engine-optimization-starter-guide.pdf">SEO Starter Guide</a>” (PDF), saying that “creating compelling and useful content will likely influence your website more than any of the other factors discussed here.”</p>
<p>In short, great content that people find useful will be linked to and shared, which will alert Google to its quality. But an app probably won’t appear in search results unless the user types the word “download” or “app” or the app’s name in their query, and Google cannot process or index deep links within apps. The way to make content as accessible to mobile users as possible is not to put it in an app, but to put it on the Web.</p>
<p>The problem is that doing this with a responsive Web design, as Google defines it, is difficult. Many responsive websites make great use of geolocation (such as Starbucks’), but most use JavaScript or server-side components to accomplish it, which is beyond Google’s scope of a responsive website.</p>
<p>Still, some websites do offer content that would be very useful to someone on a smartphone or tablet, which might differentiate those websites just enough for Google to rank them higher than competitors. One of my favorite examples is <a href="http://m.sears.com">Sears</a>, which uses dynamic serving on its mobile website to give smartphone users a scanner to compare competitors’ prices with Sears’ online prices. This empowers consumers to find the best price, while combatting the practice of “showrooming” by making it easy for people to find the best prices at Sears.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/sears-scanner.png"><img class="size-full wp-image-138984" alt="sears scanner on mobile website" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/sears-scanner-opt.png" width="439" height="780" /></a><br />
<em>Sears’ mobile website enables smartphone owners to scan items to compare against Sears’ prices.</em></p>
<p>Another great example is <a href="http://m.lowes.com">Lowe’s</a>, which provides an in-store map on the location-related pages of its mobile website. It’s a small addition, but it helps users find what they’re looking for faster once they get to the store, and it potentially differentiates the brand.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/Screenshot_2013-09-14-12-01-07.png"><img class="size-full wp-image-138986" alt="lowe's mobile location pages" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/lowes-instore-map-500-opt.png" width="500" height="889" /></a><br />
<em>Lowe’s provides an in-store map on the location-related pages of its mobile website.</em></p>
<h4>Recommendation</h4>
<p>Disney Junior should consider mobile-specific opportunities to differentiate its content from that of competitors and to add value for users.</p>
<h3>Conclusion</h3>
<p>Unfortunately, creating a responsive website alone won&#8217;t be enough to be properly optimized for search results. If you’re keeping score, more than half of the content that Disney Junior’s responsive website highlights is unusable on smartphones. The website is beautiful, to be sure, and Disney deserves credit for trying to make its content accessible to users, regardless of device. But can a website like this really be called “responsive”? It contains all the ingredients of a responsive design; however, responsive means “<a href="https://www.google.com/search?q=responsive&amp;oq=responsive&amp;aqs=chrome.0.57j59l3j61j62.2664j0&amp;sourceid=chrome&amp;ie=UTF-8">reacting quickly and positively</a>,” which this website fails to do in many ways.</p>
<p>User-friendly responsive Web design is preferred by Google, and Google doesn’t (intentionally) send traffic to websites that frustrate users, or to websites that don’t contain the keywords that people are including in their queries, or to websites whose content is not more compelling than that of competitors. Hopefully, this audit has taken you beyond just thinking about mobile configurations when tackling mobile SEO. And hopefully you feel equipped to really make your own responsive website competitive in search results.</p>
<p>Start with these basic SEO tips, which many responsive websites do not follow:</p>
<ul>
<li>Make sure your responsive website has been indexed by doing a <code>site:domain.com</code> search in Google and Bing. If it hasn’t, then merely making the website responsive will not improve its visibility.</li>
<li>Ensure that search engine spiders can crawl your website and that they index every unique piece of content once. Responsive websites should have static URLs, without difficult-to-crawl characters <a href="http://www.webmonkey.com/2011/02/gawker-learns-the-hard-way-why-hash-bang-urls-are-evil/">such as hashbangs</a>, if possible.</li>
<li>A <a href="https://support.google.com/webmasters/answer/156184?hl=en">site map</a> will make your website more crawlable. But use the proper type of site map for the content, and follow protocol.</li>
<li>Include enough plain text that search engines can understand what the website is about, without needing access to image- or Flash-based content. Progressive enhancement is a useful method of building pages that are accessible to search engines. Use <a href="http://www.seo-browser.com/">SEO-Browser.com</a> to check your work.</li>
<li>Try to include relevant keywords in your URLs, and make pages easy to remember and share by avoiding long strings of human-unreadable characters.</li>
<li>Include responsive social bookmarklets to help mobile users share your content on their social networks. But keep an eye on page speed.</li>
<li>Don’t highlight content that users can’t access on their device. Content parity is great, but serving device-specific content to the wrong devices goes too far.</li>
<li>Don’t make all of your content adaptive. Users often look for device-specific content (such as mobile games, apps, mobile coupons, etc.). Including relevant keywords is the only way to get traffic from search engines.</li>
<li>Make your responsive website load in less than a second, using Google’s <a href="http://developers.google.com/speed/pagespeed/insights/">PageSpeed Insights</a> and Akamai’s <a href="http://mobitest.akamai.com/m/index.cgi">Mobitest</a>. Not doing so could hurt you in search results for smartphones.</li>
<li>Use <a href="https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html">smart banners</a> to promote your app, instead of the more disruptive interstitials.</li>
<li>Identify content that exists on more than one URL, and use <a href="https://support.google.com/webmasters/answer/139394?hl=en">canonical tags</a> and permanent redirections to tell search engines which pages to show in search results.</li>
<li>Make sure that adaptive content and responsive Web design are really the best way to serve your users. Not every website is a traditional publication, and sometimes users have needs that are difficult to address with a single information architecture.</li>
<li>If responsive Web design truly is best for your users, then enhance your adaptive content by adding useful features (such as a scanner or GPS locator), using server-side components.</li>
</ul>
<p><em>(al, ea, il)</em></p>
<hr />
<p><small>© Bryson Meunier for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/15/seo-for-responsive-websites/#comments" thr:count="0"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/15/seo-for-responsive-websites/feed/atom/" thr:count="0"/>
        <thr:total>0</thr:total>
    </entry>
            <entry>
        <author>
            <name>Jeremy Girard</name>
                                    <uri>http://www.pumpkin-king.com/</uri>
                    </author>
                <title type="html"><![CDATA[The Habits Of Successful New Web Professionals]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/14/habits-successful-new-web-professionals/"/>
        <id>http://mgmt.smashingmagazine.com/?p=175325</id>
        <updated>2013-11-14T12:20:28Z</updated>
        <published>2013-11-14T12:08:39Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Business"/><category scheme="http://www.smashingmagazine.com" term="Communication"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/14/habits-successful-new-web-professionals/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>Starting a position in an organization, especially if it is your first in the industry, can be as nerve-wracking as it is exciting. Practices that seem like common sense to those of us who have been in the Web industry for some time might not be as obvious to designers and developers without the benefit of our experience.</p>
<p>Part of our responsibility as veterans in this industry is to <strong>mentor new team members and share with them the knowledge</strong> that we know they will need to succeed.</p>
<p><a href="http://www.flickr.com/photos/opensourceway/6555466127/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/image-3.png" width="500" height="281" alt="The expert in anything was once a beginner." title="The expert in anything was once a beginner." /></a><br />
<em>As President Rutherford B. Hayes once said, &#8220;The expert in anything was once a beginner.&#8221; (Image source: <a href="http://www.flickr.com/photos/opensourceway/6555466127/">opensourceway</a>)</em></p>
<p>I recently published an article here on Smashing Magazine titled “<a href="http://www.smashingmagazine.com/2013/10/18/lessons-learned-leading-new-web-professionals/">Lessons Learned in Leading New Web Professionals</a>.” As a follow-up to that piece, this one looks at the other side of the team leader-new employee dynamic. We’ll cover the practices that I have found are consistently followed by employees who excel in their new role and grow in this industry.</p>
<h3>Embrace The Company’s Culture</h3>
<p>Every company is different &mdash; with policies, procedures and a culture unique to it. While much attention is given to ensuring that new employees understand these policies and procedures, understanding and embracing the company’s culture is just as important to long-term success. One way to embrace a company’s culture is to <strong>get involved &mdash; both in and outside the office</strong>.</p>
<p>If your company is holding an event or activity for employees, make it a point to attend. It could be a full-blown company party or a small after-hours get-together of only a few employees. Either way, it provides an opportunity to socialize with your new colleagues and begin to build relationships with the people you work alongside.</p>
<p>In the office, look for projects that interest you and that you feel you can contribute positively to. These could be normal client engagements or even side projects driven by small teams in the organization. By asking to be included in these projects, you’ll get time to work hands on with your colleagues and show them the value you bring to the team.</p>
<p>Now, the challenge to participating in these activities is that new employees often feel like outsiders, and many are reluctant to join in on the company’s planned events. The irony, though, is that <strong>participating in these company events is one of the best ways to feel like part of the team</strong> and to break down that outsider status.</p>
<h3>Respect The Client</h3>
<p>Complaining about clients is a practice that has been around as long as clients themselves, but it has no place in the Web industry, whether you are a new professional or a seasoned veteran.</p>
<p>Clients can be challenging, but remember that when they stop calling you with questions or with work to be done, that is the day you no longer have a job. We are here because of our clients, not in spite of them.</p>
<p>Does this mean that the client is always right and that you should take whatever they dish out at you with a smile and a nod? Of course not. No one should ever suffer a client who disrespects them professionally or personally, but an abusive client who must be fired is very different from one who simply asks a lot of questions because they recognize that you are the expert. Yes, clients make poor decisions at times, and some of their questions will seem obvious or silly to you, but <strong>your answers and advice are why they hired you</strong> in the first place.</p>
<p>Respect clients &mdash; they keep you employed &mdash; and refrain from the bouts of unnecessary complaining that others in the organization might engage in. If others are complaining and trying to rope you in, politely excuse yourself. Nothing good will come of those negative conversations.</p>
<h3>Ask Questions</h3>
<p>As a new employee, you will undoubtedly have questions &mdash; a lot, in fact. That is OK. In fact, it is expected. You might feel like you are bothering others, but asking questions is how you learn and how “tribal knowledge” is passed from veterans in an organization to newcomers.</p>
<p>When you join, a company will likely give you some kind of orientation and show you the ropes, but only so much information can be conveyed in an orientation or in training. So <strong>much of what you will need to know is picked up on the job</strong>, by actually doing the work itself. When you hit a roadblock, look to others on the team for help. They will often have encountered the issue before and have set a precedent for dealing with it &mdash; the aforementioned tribal knowledge. Gaining that knowledge through experience and by asking questions is how you will grow in the organization.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/questions.jpg"><img alt="It is OK to ask questions but be sure to try to solve the issue first" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/questions.jpg" width="640" height="497" /></a><br /><em>Asking questions enables you to learn and acquire team knowledge, but try to solve problems for yourself first. (Image source: <a href="http://www.flickr.com/photos/oberazzi/318947873/sizes/z/in/photostream/">Tim O’Brien</a>)</em></p>
<p>Now, there is a balance to be struck. Throwing your hands in the air and yelling “Mayday!” every time you hit a bump in the road is too much. Try to solve a problem for yourself first, so that when you ask for help, you can show the person what you’ve tried so far. Over time, you will find the balance between exploring solutions on your own and asking for a hand.</p>
<h3>Teach Me Something</h3>
<p>I am constantly reading articles with new tips, techniques and best practices in our industry, and I spend many nights and weekends outside of normal office hours working to master these new techniques. When I discover an article or idea that I think is valuable, I always share it with the rest of my team. And I love it when others on the team return the favor.</p>
<p>When a new employee shares a worthwhile article or an approach that I had not considered, they demonstrate their passion and their dedication to growing in the industry. It also shows that they are <strong>willing not only to learn</strong>, <strong>but also to teach</strong> others.</p>
<h3>Check Your Work</h3>
<p>I appreciate when a team member completes a task quickly, but speed doesn’t trump accuracy. Too often, in an attempt to impress their manager, new team members will race through a task to show how efficient they are. They submit work before really going over it to make sure that all of the tasks have been completed correctly.</p>
<p>Checking your work before submitting it to a manager for review probably sounds like common sense, but it’s <strong>one of the biggest problems</strong> I hear about from other team leaders and managers. Work that is missing key elements or that has little errors (spelling mistakes are common) or whose functionality hasn’t been fully tested (broken links, forms that do not submit properly, etc.) are major headaches for many team leaders. A manager would rather the person finish the task a bit more slowly if the bulk of the errors could have been caught by a more thorough review.</p>
<p>Before you submit work as being complete, give it a once over to make sure that everything works as intended.</p>
<h3>Mind The Clock</h3>
<p>Web design is not a 9:00 to 5:00 job. Sometimes, inspiration or a breakthrough strikes at the end of the day. If you punch the clock exactly at 5:00, you could lose any momentum or spark of creativity you may have had, when instead you should nurture the moment. Other times, a deadline is looming that requires extra hours in the office. You need to accept that the day doesn’t always end at 5:00.</p>
<p>It goes both ways, though. An employee who is willing to stay late and put in extra effort when needed will be recognized and appreciated, but don’t stay at your desk 12 hours a day, only to go home and do more work there.</p>
<p><a href="http://www.flickr.com/photos/husseinabdallah/4470248982/sizes/z/in/photostream/"><img alt="Working late every night will not allow you to properly balance work and life" src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/clock.jpg" width="640" height="425" /></a><br /><em>Minding the clock means not working late every night. (Image source: <a href="http://www.flickr.com/photos/husseinabdallah/4470248982/sizes/z/in/photostream/">abdallahh</a>)</em></p>
<p>Minding the clock means <strong>balancing your professional and personal time</strong>. Don’t burn yourself out by trying to be a superhero who does nothing but work. The most successful colleagues I have worked with over the years have found and maintained a work-life balance.</p>
<h3>Work On Your Communication Skills</h3>
<p>Responding to questions and requests from clients can be a full-time job. In fact, on some days I feel like all I’ve done is answer emails. Managers want to be able to offload some communication responsibilities to others on the team &mdash; but they need to know that the communication will not suffer from a lack of skill.</p>
<p>Whether you are answering questions from clients, presenting design concepts in a meeting or brainstorming with colleagues, communicating your ideas in a way that meets your company’s expectations is important. <strong>This skill will increase your value to the team</strong> and set you up to take on more responsibility.</p>
<h3>Join The Community</h3>
<p>The Web community is amazing, and you can participate in it in a number of ways. Depending on where you live, you might have access to meetups, networking events, conferences and other gatherings. We all have opportunities to share our experience, knowledge and passion for this industry.</p>
<p>Participating in these events will make you feel like a part of the Web community, help you make connections with peers and reflect well on your company. With limited time to attend such events, leaders appreciate when other team members <strong>take the initiative to get out in the community and represent the company</strong>.</p>
<h3>Stay Positive</h3>
<p>This tip might sound easy to follow, but keeping a positive attitude and demeanor is more challenging than it seems.</p>
<p>As a new team member, you will undoubtedly have times when you are unsure of what to work on next or of how you are performing. This uncertainly can be stressful, and stress can eventually lead to a negative attitude. Fight the urge to give into that negativity &mdash; stay positive.</p>
<p>Saying that everything is easier with a positive attitude might sound like an oversimplification, but it’s not. A positive attitude makes challenges easier to face, and it encourages others to come to your aid. After all, no one is excited to work with someone with a negative attitude.</p>
<h3>Have Fun</h3>
<p>Many years ago, I had an employer who, whenever my job got stressful or challenging, would say, “Well, that’s why we pay you to be here. If it was fun, it wouldn’t be work!”</p>
<p>I don’t agree with this sentiment. Yes, most of us wouldn’t show up for work every day if a pay check wasn’t waiting for us at the end of the week. However, just because we have to work doesn’t mean we can’t enjoy where we work.</p>
<p>The most successful employees I have had the pleasure of working alongside over the years have enjoyed their job and where they work. <strong>Life is too short for anything else.</strong> So, have fun at your job &mdash; and if you can’t, consider getting another.</p>
<p><a href="http://www.flickr.com/photos/47691521@N07/5445602868/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/why-work.jpg" width="500" height="281" alt="Staying positive and having fun at your job are two overlooked yet incredibly important elements of success." title="Staying positive and having fun at your job are two overlooked yet incredibly important elements of success." /></a><br /><em>Staying positive and having fun at your job are two overlooked yet incredibly important elements of success. (Image source: <a href="http://www.flickr.com/photos/47691521@N07/5445602868/">opensourceway</a>)</em></p>
<h3>In Summary</h3>
<p>Joining an organization can be stressful. Hopefully, the tips presented here will help you make the most of the opportunity and relieve a bit of the stress. Here are the do’s and don’ts we’ve covered:</p>
<ul>
<li>Do embrace the culture, and participate in company events.</li>
<li>Do not let the feeling of being a newbie keep you from participating in events.</li>
<li>Do not engage in pointless complaining about clients.</li>
<li>Do respect your clients and recognize that they are the reason you have a job.</li>
<li>Do not be afraid to ask questions; that’s how you learn.</li>
<li>Do try to solve problems on your own before asking for help.</li>
<li>Do share helpful or interesting articles that you come across.</li>
<li>Do not submit work before having checked it for accuracy.</li>
<li>Do strike a balance between your professional and personal time.</li>
<li>Do work on your communication skills, and understand what the company expects from your communication with clients.</li>
<li>Do look for opportunities to participate in your local Web community.</li>
<li>Do stay positive, even when you feel uncertain or stressed out.</li>
<li>Do have fun at your job and enjoy where you work.</li>
</ul>
<h4>What About You?</h4>
<p>What habits of successful new team members would you add to the list? Feel free to share in the comments below.</p>
<p><em>(al, ea, il)</em></p>
<hr />
<p><small>© Jeremy Girard for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/14/habits-successful-new-web-professionals/#comments" thr:count="43"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/14/habits-successful-new-web-professionals/feed/atom/" thr:count="43"/>
        <thr:total>43</thr:total>
    </entry>
            <entry>
        <author>
            <name>Extensible Web Manifesto Team</name>
                                </author>
                <title type="html"><![CDATA[Laying The Groundwork For Extensibility]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/13/laying-groundwork-extensibility/"/>
        <id>http://mgmt.smashingmagazine.com/?p=175205</id>
        <updated>2013-11-13T14:32:31Z</updated>
        <published>2013-11-13T14:26:09Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Coding"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/13/laying-groundwork-extensibility/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>The Web has succeeded at interoperability and scale in a way that no other technology has before or since. Still, <strong>the Web remains far from “state of the art”</strong>, and it is being increasingly threatened by walled gardens. The Web platform often lags competitors in delivering new system and device capabilities to developers. Worse, it often hobbles new capabilities behind either high- or low-level APIs, forcing painful choices (and workarounds) on developers.</p>
<p>Despite browser versions being released much faster, new capabilities still take a long time to materialize, and often do so in forms that are at best frustrating and at worst nearly useless to large swathes of the developer community for solving real-world needs.</p>
<p>The best recent improvements to the platform have been the result of collaborative discussions between developers and browser vendors. Sometimes these lead to big new features. More often than not, they lead to small changes that make existing systems suitable for a wider range of uses. In the absence of an intellectual framework for making these changes, we get <strong>a hodgepodge approach to design</strong>, where good ideas are not carried through and discredited patterns live on far longer than they should.</p>
<p>Building on the successes of tight collaboration between Web developers and browser-makers, folks who have iterated on proposals and straddled both sides of the line (including this article’s authors, <a href="https://twitter.com/wycats">Yehuda Katz</a>, <a href="https://twitter.com/dglazkov">Dimitri Glazkov</a>, <a href="https://twitter.com/elarvidson">Erik Arvidson</a>, <a href="https://twitter.com/littlecalculist">Dave Herman</a> and others) have taken a longer look at what gives Web features longevity and utility.</p>
<p><a href="http://www.flickr.com/photos/opensourceway/7496803526/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/image-4.png" alt="image-4" width="500" height="281" /></a><br /><em>The result of collaborative discussions between developers and browser vendors lead to small changes that make existing systems suitable for a wider range of uses. (<a href="http://www.flickr.com/photos/opensourceway/7496803526/">Image source</a>)</em></p>
<p>Over a decade of JavaScript library work, the progressive-enhancement revolution, the advent of polyfills, and the effort to birth the “Web Components” and “Shadow DOM” specifications have taught us surprising lessons: In every period, being able to use features in both high- and low-level forms has always been desirable.</p>
<p>HTML is great, until it isn’t. And JavaScript-only has predictable (and thankfully, now acknowledged) drawbacks.</p>
<p>Thinking that there is a “right way” to build new Web features is seductive. Just define The Way To Do It™ and make all standard-bearers comply, right? Turns out, it’s not that simple. New proposals are organic and stem from needs, not from pure speculation. Low-level needs demand low-level solutions. <strong>HTML elements and CSS rules aren’t natural fits for all work.</strong> And the existence of JavaScript creates a need for new APIs near the language level.</p>
<p>The process of introducing new features is usually an either-or proposition (i.e. either declarative features or low-level APIs) in the short run. But in the long run, nearly all features need expression in both domains. Moreover, we have to realize that proposals for new standards are hard work. The people doing that hard work are generally trying to do the right thing and can’t wait forever to ship features. A pragmatic, realistic approach to increasing the power and quality of Web APIs is needed, one that doesn’t presuppose infinite time, effort or understanding on the part of participants &mdash; just goodwill and a willingness to build bridges.</p>
<p>To support this goal, <strong>the standards process needs an intervention</strong>.</p>
<p><a href="http://extensiblewebmanifesto.org">The Extensible Web Manifesto</a> is a document that we have drafted to build consensus among standards participants around a few core ideas:</p>
<ul>
<li>High-level APIs and markup should provide direct extension points via JavaScript.</li>
<li>Where the platform already provides high-level systems, related low-level additions should be used to explain how the high-level bits would have been written in terms of these new lower-level APIs.</li>
<li>When adding new raw power to the platform, prefer lower-level to higher-level APIs because they enable experimentation and iteration ahead of broad adoption.</li>
</ul>
<p>The core insight is that the Web has come this far on the back of largely declarative, largely high-level features: HTML elements for forms, CSS for layout and styling, and <code>&lt;a&gt;</code> for defining relationships between documents. While each of these adds APIs, little effort has been made so far to explain how they do their work and how they relate to each other.</p>
<p>While you can almost sense the many strata of APIs below Web features, they go <strong>unnamed</strong>, <strong>unexplained</strong>, <strong>unconnected and unavailable to you</strong> when the system doesn’t do exactly what you need.</p>
<p><a href="http://www.flickr.com/photos/opensourceway/5537457153/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/image-2.png" alt="image-2" width="500" height="281" /></a><br /><em>It&#8217;s vital to know how APIs work and how they&#8217;re connected to each other. (<a href="http://www.flickr.com/photos/opensourceway/5537457153/">Image source</a>)</em></p>
<p>For example:</p>
<ul>
<li>The HTML5 <code>canvas</code> element defines a programmatic 2-D bitmap API, while the long-standing <code>img</code> element is, not coincidentally, a way of rendering 2-D bitmap content. It’s easy to imagine that we could explain how JavaScript loads, unpacks and finally renders image content using the <code>canvas</code> API. Very strange that they’re separate elements and that the <code>img</code> element doesn’t have the <code>canvas</code> API, no?</li>
<li>Asking for camera access with <code>&lt;input type="file" accept="image/*;capture=camera"&gt;</code> as well as with <code>getUserMedia()</code> is possible, but the form element version isn’t explained in the HTML specification in terms of <code>getUserMedia()</code> (which, admittedly, was added later &mdash; but no one has bothered to connect them yet).</li>
<li>That’s better than the <a href="http://www.html5rocks.com/en/tutorials/geolocation/trip_meter/">Geolocation API</a>. There’s currently no way to do that with an <code>input</code> element. It’s a valuable feature entirely disconnected from markup.</li>
<li>Neither HTML nor the <a href="https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html">Web Audio API</a> explains how the <code>audio</code> tag works, despite the Web Audio API clearly being capable of providing the <code>audio</code> element’s implementation.</li>
</ul>
<p>This isn’t to pick on or single out any of the hard-working developers and authors who have poured their lives into building consensus and software to introduce these capabilities. Indeed, <strong>we are grateful for their accomplishments</strong>.</p>
<p>The high-order bit is that the job isn’t done when both declarative and script-driven versions of a feature appear. Building a platform that’s resilient and adaptive for the long haul hinges on giving developers the confidence to take what they learn about one area and apply it evenly across the system. And that means <strong>explaining how the system works</strong> and drawing connections between the pieces.</p>
<p>In the case of many low-level APIs without high-level equivalents (such as Geolocation), their duty to “explain themselves” ends at the point where they have exposed a good API to JavaScript. “Good” here could mean being idiomatic and not introducing more platform magic than necessary. But when there are also declarative versions, or when only high-level versions exist, then the question looms large: How does that thing work? What are the layers below it? What APIs are required to make it go? How would you explain that API in mostly-JavaScript terms, appealing as little as possible to magical new platform APIs?</p>
<p>In an earlier time, attempting such a sweeping cultural change might have been foolish. Starting at a declarative level was undoubtedly a good idea. However, explaining even a bit of the underlying magic goes a long way: Exposing a DOM tree JavaScript opened new worlds to developers and bolstered the competitiveness of the platform. It also enabled the community to adapt through experimentation and enabled libraries to compete. This allows valuable, popular API ideas to potentially be standardized. <strong>The community can do it faster and with less risk </strong>than browser vendors and standards organizations can.</p>
<p>The answers aren’t always obvious, but the process of asking “How does that work?” is often more fruitful than it first appears. Details come into focus and missing explanations are uncovered, layer by layer. At each layer, it’s tempting to throw up our collective hands and say “It’s too hard” to explain all the stuff down there. Throw it all out. Start over. At least we won’t make the same mistakes, right?</p>
<p>Perhaps. But we’d also be starting from zero. Zero users, zero developers and zero useful content. The Web is the open, extensible, multi-vendor, universal platform of our lifetime. <strong>Small, meaningful changes to the Web can have an outsized impact</strong> relative to the effort involved. It’s a straightforward way to do a great deal of good. Encouraging layering, bit by bit, doesn’t mean giving up or “slowing down.” Just the opposite: It’s our only credible hope of making a Web that’s worthy to succeed the Web we have today.</p>
<p><a href="http://www.flickr.com/photos/opensourceway/5319988695/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/image-1.png" alt="image-1" width="500" height="281" /></a><br /><em>Always keep in mind to &#8220;make things better&#8221; as much as you can. (<a href="http://www.flickr.com/photos/opensourceway/5319988695/">Image source</a>)</em></p>
<p><em>(al, ea, il)</em></p>
<hr />
<p><small>© Extensible Web Manifesto Team for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/13/laying-groundwork-extensibility/#comments" thr:count="0"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/13/laying-groundwork-extensibility/feed/atom/" thr:count="0"/>
        <thr:total>0</thr:total>
    </entry>
            <entry>
        <author>
            <name>Wilson Page</name>
                                    <uri>http://labs.ft.com</uri>
                    </author>
                <title type="html"><![CDATA[An Introduction To DOM Events]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/12/an-introduction-to-dom-events/"/>
        <id>http://mgmt.smashingmagazine.com/?p=175817</id>
        <updated>2013-11-12T10:34:20Z</updated>
        <published>2013-11-12T09:34:15Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Coding"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/12/an-introduction-to-dom-events/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<!-- deleted style tag -->
<p>Click, touch, load, drag, change, input, error, resize &mdash; the list of possible DOM events is lengthy. Events can be triggered on any part of a document, whether by a user’s interaction or by the browser. They don’t just start and end in one place; they flow though the document, on a life cycle of their own. This life cycle is what makes DOM events so extensible and useful. As developers, <strong>we should understand how DOM events work</strong>, so that we can harness their potential and build engaging experiences.</p>
<p>Throughout my time as a front-end developer, I felt that I was never given a straight explanation of how DOM events work. My aim here is to give you a clear overview of the subject, to get you up to speed more quickly than I did.</p>
<p>I will introduce the basics of working with DOM events, then delve into their inner workings, explaining how we can make use of them to solve common problems.</p>
<h3>Listening For Events</h3>
<p>In the past, browsers have had major inconsistencies in the way they attach event listeners to DOM nodes. Libraries such as <a title="jQuery" href="http://jquery.com/">jQuery</a> have been invaluable in abstracting away these oddities.</p>
<p>As we move ever closer to standardized browser environments, we can more safely use the APIs from the official specification. To keep it simple, I will describe how to manage events for the modern Web. If you are writing JavaScript for Internet Explorer (IE) 8 or below, I would advise using a <a title="addEventListener polyfill" href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.removeEventListener#Polyfill_to_support_older_browsers">polyfill</a> or framework (such as <a title="jQuery" href="http://jquery.com">jQuery</a>) to manage event listeners.</p>
<p>In JavaScript, we can listen to events using this:</p>
<pre><code class="language-javascript">
element.addEventListener(&lt;event-name&gt;, &lt;callback&gt;, &lt;use-capture&gt;);
</code></pre>
<ul>
<li><code>event-name</code> (string)<br />
This is the name or type of event that you would like to listen to. It could be any of the standard DOM events (<code>click</code>, <code>mousedown</code>, <code>touchstart</code>, <code>transitionEnd</code>, etc.) or even your own custom event name (we’ll touch on custom events later).</li>
<li><code>callback</code> (function)<br />
This function gets called when the event happens. The <code>event</code> object, containing data about the event, is passed as the first argument.</li>
<li><code>use-capture</code> (boolean)<br />
This declares whether the callback should be fired in the “capture” phase. (Don’t worry: We’ll explain what that means a little later.)</li>
</ul>
<pre><code class="language-javascript">
var element = document.getElementById('element');

function callback() {
  alert('Hello');
}

// Add listener
element.addEventListener('click', callback);
</code></pre>
<p><a class="demo-button" href="http://jsbin.com/ayatif/2/edit">Demo: addEventListener</a></p>
<h3>Removing Listeners</h3>
<p>Removing event listeners once they are no longer needed is a best practice (especially in long-running Web applications). To do this, use the <code>element.removeEventListener()</code> method:</p>
<pre><code class="language-javascript">
element.removeEventListener(&lt;event-name&gt;, &lt;callback&gt;, &lt;use-capture&gt;);
</code></pre>
<p>But <code>removeEventListener</code> has one catch: You must have a reference to the callback function that was originally bound. Simply calling <code>element.removeEventListener('click');</code> will not work.</p>
<p>Essentially, if we have any interest in removing event listeners (which we should in “long-lived” applications), then we need to keep a handle on our callbacks. This means we cannot use anonymous functions.</p>
<pre><code class="language-javascript">
var element = document.getElementById('element');

function callback() {
  alert('Hello once');
  element.removeEventListener('click', callback);
}

// Add listener
element.addEventListener('click', callback);
</code></pre>
<p><a class="demo-button" href="http://jsbin.com/ayamur/1/edit">Demo: removeEventListener</a></p>
<h3>Maintaining Callback Context</h3>
<p>An easy gotcha is callbacks being called with the incorrect context. Let’s explain with an example.</p>
<pre><code class="language-javascript">
var element = document.getElementById('element');

var user = {
 firstname: 'Wilson',
 greeting: function(){
   alert('My name is ' + this.firstname);
 }
};

// Attach user.greeting as a callback
element.addEventListener('click', user.greeting);

// alert =&gt; 'My name is undefined'
</code></pre>
<p><a class="demo-button" href="http://jsbin.com/atoluy/1/edit">Demo: Incorrect callback context</a></p>
<h4>Using Anonymous Functions</h4>
<p>We expected the callback to correctly alert us with <code>My name is Wilson</code>. In fact, it alerts us with <code>My name is undefined</code>. In order for <code>this.name</code> to return <code>Wilson</code>, <code>user.greeting</code> must be called within the context (i.e. whatever is left of the dot when called) of <code>user</code>.</p>
<p>When we pass the <code>greeting</code> function to the <code>addEventListener</code> method, we are only passing a reference to the function; the context of <code>user</code> is not passed with it. Internally, the callback is called in the context of <code>element</code>, which means that <code>this</code> refers to <code>element</code>, not to <code>user</code>. Therefore, <code>this.firstname</code> is undefined.</p>
<p>There are two ways to prevent this context mismatch. First, we can call <code>user.greeting()</code> with the correct context inside an anonymous function.</p>
<pre><code class="language-javascript">
element.addEventListener('click', function() {
  user.greeting();
  // alert =&gt; 'My name is Wilson'
});
</code></pre>
<p><a class="demo-button" href="http://jsbin.com/onomud/1/edit">Demo: Anonymous functions</a></p>
<h4>Function.prototype.bind</h4>
<p>The last method isn’t so good because now we don’t have a handle on the function when we want to remove it with <code>.removeEventListener()</code>. Plus, it’s pretty ugly. I prefer to use the <a title="Function.prototype.bind" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"><code>.bind()</code></a> method (built into all functions, as of ECMAScript 5) to generate a new function (<code>bound</code>) that will always run in the given context. We then pass that function as the callback to <code>.addEventListener()</code>.</p>
<pre><code class="language-javascript">
// Overwrite the original function with
// one bound to the context of 'user'
user.greeting = user.greeting.bind(user);

// Attach the bound user.greeting as a callback
button.addEventListener('click', user.greeting);
</code></pre>
<p>We also have a reference to the callback at hand, which we can use to unbind the listener if need be.</p>
<pre><code class="language-javascript">
button.removeEventListener('click', user.greeting);
</code></pre>
<p><a class="demo-button" href="http://jsbin.com/ozolec/1/edit">Demo: Function.prototype.bind</a></li>
<li>Check the <a href="http://kangax.github.io/es5-compat-table/#Function.prototype.bind">support page</a> for <code>Function.prototype.bind</code> and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Compatibility">polyfill</a> if you need it.</li>
</ul>
<h3>The Event Object</h3>
<p>The event object is created when the event first happens; it travels with the event on its journey through the DOM. The function that we assign as a callback to an event listener is passed the event object as its first argument. We can use this object to access a wealth of information about the event that has occurred:</p>
<ul>
<li><code>type</code> (string)<br />
This is the name of the event.</li>
<li><code>target</code> (node)<br />
This is the DOM node where the event originated.</li>
<li><code>currentTarget</code> (node)<br />
This is the DOM node that the event callback is currently firing on.</li>
<li><code>bubbles</code> (boolean)<br />
This indicates whether this is a “bubbling” event (which we’ll <a href="#bubble-phase">explain later</a>).</li>
<li><code>preventDefault</code> (function)<br />
This prevents any default behaviour from occurring that the user agent (i.e. browser) might carry out in relation to the event (for example, preventing a <code>click</code> event on an <code>&lt;a&gt;</code> element from loading a new page).</li>
<li><code>stopPropagation</code> (function)<br />
This prevents any callbacks from being fired on any nodes further along the event chain, but it does not prevent any additional callbacks of the same event name from being fired on the current node. (We’ll talk about that <a href="#stopping-propagation">later</a>.)</li>
<li><code>stopImmediatePropagation</code> (function)<br />
This prevents any callbacks from being fired on any nodes further along the event chain, including any additional callbacks of the same event name on the current node.</li>
<li><code>cancelable</code> (boolean)<br />
This indicates whether the default behaviour of this event can be prevented by calling the <a href="#preventing-default"><code>event.preventDefault</code></a> method.</li>
<li><code>defaultPrevented</code> (boolean)<br />
This states whether the <code>preventDefault</code> method has been called on the event object.</li>
<li><code>isTrusted</code> (boolean)<br />
An event is said to be “trusted” when it originates from the device itself, not synthesized from within JavaScript.</li>
<li><code>eventPhase</code> (number)<br />
This number represents the phase that the event is currently in: none (<code>0</code>), capture (<code>1</code>), target (<code>2</code>) or bubbling (<code>3</code>). We’ll go over event phases <a href="#event-phases">next</a>.</li>
<li><code>timestamp</code> (number)<br />
This is the date on which the event occurred.</li>
</ul>
<p>Many other properties can be found on the event object, but they are specific to the type of event in question. For example, mouse events will include <code>clientX</code> and <code>clientY</code> properties on the event object to indicate the location of the pointer in the viewport.</p>
<p>It’s best to use your favorite browser’s debugger or a <code>console.log</code> to look more closely at the event object and its properties.</p>
<h3 id="event-phases">Event Phases</h3>
<p>When a DOM event fires in your app, it doesn’t just fire once where the event originated; it embarks on a journey of three phases. In short, the event flows from the document’s root to the target (i.e. capture phase), then fires on the event target (target phase), then flows back to the document’s root (bubbling phase).</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/10/eventflow.png"><img class="size-full wp-image-129590 aligncenter" alt="eventflow" src="http://media.smashingmagazine.com/wp-content/uploads/2013/10/eventflow.png" width="520" height="560" /></a><br />
<em>(Image source: <a href="http://www.w3.org/TR/DOM-Level-3-Events/#event-flow">W3C</a>)</em></p>
<p><a class="demo-button" href="http://jsbin.com/exezex/4/edit?css,js,output">Demo: Slow motion event path</a></p>
<h4>Capture Phase</h4>
<p>The first phase is the capture phase. The event starts its journey at the root of the document, working its way down through each layer of the DOM, firing on each node until it reaches the event target. The job of the capture phase is to build the propagation path, which the event will travel back through in the bubbling phase.</p>
<p>As mentioned, you can listen to events in the capture phase by setting the third argument of <code>addEventListener</code> to <code>true</code>. I have not found many use cases for capture phase listeners, but you could potentially prevent any clicks from firing in a certain element if the event is handled in the capture phase.</p>
<pre><code class="language-javascript">
var form = document.querySelector('form');

form.addEventListener('click', function(event) {
  event.stopPropagation();
}, true); // Note: 'true'
</code></pre>
<p>If you’re unsure, listen for events in the bubbling phase by setting the <code>useCapture</code> flag to <code>false</code> or <code>undefined</code>.</p>
<h4>Target Phase</h4>
<p>An event reaching the target is known as the target phase. The event fires on the target node, before reversing and retracing its steps, propagating back to the outermost document level.</p>
<p>In the case of nested elements, mouse and pointer events are always targeted at the most deeply nested element. If you have listened for a <code>click</code> event on a <code>&lt;div&gt;</code> element, and the user actually clicks on a <code>&lt;p&gt;</code> element in the div, then the <code>&lt;p&gt;</code> element will become the event target. The fact that events “bubble” means that you are able to listen for clicks on the <code>&lt;div&gt;</code> (or any other ancestor node) and still receive a callback once the event passes through.</p>
<h4 id="bubble-phase">Bubbling Phase</h4>
<p>After an event has fired on the target, it doesn’t stop there. It bubbles up (or propagates) through the DOM until it reaches the document’s root. This means that the same event is fired on the target’s parent node, followed by the parent’s parent, continuing until there is no parent to pass the event onto.</p>
<p>Think of the DOM as an onion and the event target as the core of the onion. In the capture phase, the event drills into the onion through each layer. When the event reaches the core, it fires (the target phase), and then reverses, working its way back up through each layer (the propagation phase). Once the event has returned to the surface, its journey is over.</p>
<p>Bubbling is useful. It frees us from listening for an event on the exact element it came from; instead, we listen on an element further up the DOM tree, waiting for the event to reach us. If events didn’t bubble, we would have to, in some cases, listen for an event on many different elements to ensure that it is caught.</p>
<p><a class="demo-button" href="http://jsbin.com/unuhec/4/edit">Demo: Identifying event phases</a></p>
<p>The majority of, but not all, events bubble. When events do not bubble, it is usually for a good reason. If in doubt, check <a href="http://www.w3.org/TR/DOM-Level-3-Events/#event-types">the specification</a>.</p>
<h3 id="stopping-propagation">Stopping Propagation</h3>
<p>Interrupting the path of the event at any point on its journey (i.e. in the capture or bubbling phase) is possible simply by calling the <code>stopPropagation</code> method on the event object. Then, the event will no longer call any listeners on nodes that it travels through on its way to the target and back to the document.</p>
<pre><code class="language-javascript">
child.addEventListener('click', function(event) {
 event.stopPropagation();
});

parent.addEventListener('click', function(event) {
 // If the child element is clicked
 // this callback will not fire
});
</code></pre>
<p>Calling <code>event.stopPropagation()</code> will not prevent any additional event listeners from being called on the current target if multiple listeners for the same event exist. If you wish to prevent any additional listeners from being called on the current node, you can use the more aggressive <code>event.stopImmediatePropagation()</code> method.</p>
<pre><code class="language-javascript">
child.addEventListener('click', function(event) {
 event.stopImmediatePropagation();
});

child.addEventListener('click', function(event) {
 // If the child element is clicked
 // this callback will not fire
});
</code></pre>
<p><a class="demo-button" href="http://jsbin.com/aparot/3/edit?html,js,output">Demo: Stopping propagation</a></p>
<h3 id="preventing-default">Prevent The Browser’s Default Behavior</h3>
<p>The browser has default behaviors that will respond when certain events occur in the document. The most common event is a link being clicked. When a <code>click</code> event occurs on an <code>&lt;a&gt;</code> element, it will bubble up to the document level of the DOM, and the browser will interpret the <code>href</code> attribute and reload the window at the new address.</p>
<p>In Web applications, developers usually want to manage the navigation themselves, without causing the page to refresh. To do this, we need to prevent the browser’s default response to clicks and instead do our own thing. To do this, we call <code>event.preventDefault()</code>.</p>
<pre><code class="language-javascript">
anchor.addEventListener('click', function(event) {
  event.preventDefault();
  // Do our own thing
});
</code></pre>
<p>We can prevent many other default behaviors in the browser. For example, we could prevent presses of the space bar from scrolling the page in an HTML5 game, or we could prevent clicks from selecting text.</p>
<p>Calling <code>event.stopPropagation()</code> here will only prevent callbacks that are attached further down the propagation chain from being fired. It will not prevent the browser from doing its thing.</p>
<p><a class="demo-button" href="http://jsbin.com/ibotap/1/edit">Demo: Preventing default behavior</a></p>
<h3>Custom Events</h3>
<p>The browser is not the only thing that is able to trigger DOM events. We can create our own custom events and dispatch them on any element in the document. This type of event would behave just the same as a regular DOM event.</p>
<pre><code class="language-javascript">
var myEvent = new CustomEvent("myevent", {
  detail: {
    name: "Wilson"
  },
  bubbles: true,
  cancelable: false
});

// Listen for 'myevent' on an element
myElement.addEventListener('myevent', function(event) {
  alert('Hello ' + event.detail.name);
});

// Trigger the 'myevent'
myElement.dispatchEvent(myEvent);
</code></pre>
<p>Synthesizing “untrusted” DOM events on elements (for example, <code>click</code>) to simulate user interaction is also possible. This can be useful when testing DOM-related libraries. If you’re interested, the Mozilla Developer Network has a <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/Events/Creating_and_triggering_events#Triggering_built-in_events">write-up on it</a>.</p>
<p>Note the following:</p>
<ul>
<li>The <code>CustomEvent</code> API is not available in IE 8 and below.</li>
<li>The <a href="http://flightjs.github.io/">Flight</a> framework from Twitter makes use of custom events to communicate between modules. This enforces a highly decoupled, modular architecture.</li>
</ul>
<p><a class="demo-button" href="http://jsbin.com/emuhef/1/edit">Demo: Custom events</a></p>
<h3>Delegate Event Listeners</h3>
<p>Delegate event listeners are a more convenient and performant way to listen for events on a large number of DOM nodes using a single event listener. For example, if a list contains 100 items that all need to respond to a <code>click</code> event in a similar way, then we could query the DOM for all of the list items and attach an event listener to each one. This would result in 100 separate event listeners. Whenever a new item is added to the list, the <code>click</code> event listener would have to be added to it. Not only does this risk getting expensive, but it is tricky to maintain.</p>
<p>Delegate event listeners can make our lives a lot easier. Instead of listening for the <code>click</code> event on each element, we listen for it on the parent <code>&lt;ul&gt;</code> element. When an <code>&lt;li&gt;</code> is clicked, then the event bubbles up to the <code>&lt;ul&gt;</code>, triggering the callback. We can identify which <code>&lt;li&gt;</code> element has been clicked by inspecting the <code>event.target</code>. Below is a crude example to illustrate:</p>
<pre><code class="language-javascript">
var list = document.querySelector('ul');

list.addEventListener('click', function(event) {
  while (target.tagName !== 'LI') {
    target = target.parentNode;
    if (target === list) return;
  }

  // Do stuff here
});
</code></pre>
<p>This is better because we have only the overhead of a single event listener, and we no longer have to worry about attaching a new event listener when an item is added to the list. The concept is pretty simple but super-useful.</p>
<p>I wouldn’t recommend using such a crude implementation in your app. Instead, use an event delegate JavaScript library, such as FT Lab’s <a title="ftdomdelegate" href="https://github.com/ftlabs/ftdomdelegate">ftdomdelegate</a>. If you’re using jQuery, you can seamlessly use event delegation by passing a selector as the second parameter to the <code>.on()</code> method.</p>
<pre><code class="language-javascript">
// Not using event delegation
$('li').on('click', function(){});

// Using event delegation
$('ul').on('click', 'li', function(){});
</code></pre>
<p><a class="demo-button" title="Demo: Delegate event listeners" href="http://jsbin.com/isojul/1/edit">Demo: Delegate event listeners</a></p>
<h3>Useful Events</h3>
<h4>load</h4>
<p>The <code>load</code> event fires on any resource that has finished loading (including any dependent resources). This could be an image, style sheet, script, video, audio file, document or window.</p>
<pre><code class="language-javascript">
image.addEventListener('load', function(event) {
  image.classList.add('has-loaded');
});
</code></pre>
<p><a class="demo-button" href="http://jsbin.com/uhimir/1/edit">Demo: Image load event</a></p>
<h4>onbeforeunload</h4>
<p><code>window.onbeforeunload</code> enables developers to ask the user to confirm that they want to leave the page. This can be useful in applications that require the user to save changes that would get lost if the browser’s tab were to be accidentally closed.</p>
<pre><code class="language-javascript">
window.onbeforeunload = function() {
  if (textarea.value != textarea.defaultValue) {
    return 'Do you want to leave the page and discard changes?';
  }
};
</code></pre>
<p>Note that assigning an <code>onbeforeunload</code> handler prevents the browser <a href="https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching">from caching the page</a>, thus making return visits a lot slower. Also, <code>onbeforeunload</code> handlers must be synchronous.</p>
<p><a class="demo-button" href="http://jsbin.com/inelaj/2/edit">Demo: onbeforeunload</a></p>
<h4>Stopping Window bounce in Mobile Safari</h4>
<p>At the Financial Times, we use a simple <code>event.preventDefault</code> technique to prevent mobile Safari from bouncing the window when it is scrolled.</p>
<pre><code class="language-javascript">
document.body.addEventListener('touchmove', function(event) {
 event.preventDefault();
});
</code></pre>
<p>Be warned that this will also prevent any native scrolling from working ( such as <code>overflow: scroll</code>). To allow native scrolling on a subset of elements that need it, we listen for the same event on the scrollable element and set a flag on the event object. In the callback at the document level, we decide whether to prevent the default behavior of the touch event based on the existence of the <code>isScrollable</code> flag.</p>
<pre><code class="language-javascript">
// Lower down in the DOM we set a flag
scrollableElement.addEventListener('touchmove', function(event) {
 event.isScrollable = true;
});

// Higher up the DOM we check for this flag to decide
// whether to let the browser handle the scroll
document.addEventListener('touchmove', function(event) {
 if (!event.isScrollable) event.preventDefault();
});
</code></pre>
<p>Manipulating the event object is not possible in IE 8 and below. As a workaround, you can set properties on the <code>event.target</code> node.</p>
<h4>resize</h4>
<p>Listening to the resize event on the <code>window</code> object is super-useful for complex responsive layouts. Achieving a layout with CSS alone is not always possible. Sometimes JavaScript has to help us calculate and set the size of elements. When the window is resized or the device’s orientation changes, then we would likely need to readjust these sizes.</p>
<pre><code class="language-javascript">
window.addEventListener('resize', function() {
  // update the layout
});
</code></pre>
<p>I recommended using a <a href="http://davidwalsh.name/function-debounce">debounced</a> callback to normalize the callback rate and prevent extreme thrashing in the layout.</p>
<p><a class="demo-button" href="http://jsbin.com/usevow/1/edit">Demo: Window resizing</a></p>
<h4>transitionEnd</h4>
<p>Today we use CSS to power the majority of transitions and animations in our applications. Sometimes, though, we still need to know when a particular animation has finished.</p>
<pre><code class="language-javascript">
el.addEventListener('transitionEnd', function() {
 // Do stuff
});
</code></pre>
<p>Note the following:</p>
<ul>
<li>If you’re using <code>@keyframe</code> animations, use the <code>animationEnd</code> event name, instead of <code>transitionEnd</code>.</li>
<li>Like a lot of events, <code>transitionEnd</code> bubbles. Remember either to call <code>event.stopPropagation()</code> on any descendant transition events or to check the <code>event.target</code> to prevent callback logic from running when it’s not supposed to.</li>
<li>Event names are still widely vendor-prefixed (for example, <code>webkitTransitionEnd</code>, <code>msTransitionEnd</code>, etc). Use a library such as <a title="Modernizr" href="http://modernizr.com/">Modernizr</a> to get the event name’s correct prefix.</li>
</ul>
<p><a class="demo-button" href="http://jsbin.com/ijogok/1/edit">Demo: Transition end</a></p>
<h4>animationiteration</h4>
<p>The <code>animationiteration</code> event will fire every time a currently animating element completes an iteration. This is useful if we want to stop an animation but not midway through.</p>
<pre><code class="language-javascript">
function start() {
  div.classList.add('spin');
}

function stop() {
  div.addEventListener('animationiteration', callback);

  function callback() {
    div.classList.remove('spin');
    div.removeEventListener('animationiteration', callback);
  }
}
</code></pre>
<p>If you’re interested, I’ve <a href="http://wilsonpage.co.uk/animation-iteration-event">written about the <code>animationiteration</code> event</a> in a little more detail on my blog.</p>
<p><a class="demo-button" href="http://jsbin.com/AwoYuxE/2">Demo: Animation iteration</a></p>
<h4>error</h4>
<p>If an error occurs when a resource loads, we might want to do something about it, especially if our users are on a flaky connection. The Financial Times uses this event to detect any images that might have failed to load in an article and instantly hide them. Because the “<a href="http://www.w3.org/TR/DOM-Level-3-Events/#event-type-error">DOM Level 3 Events</a>” specification has redefined the <code>error</code> event to “not bubble,” we can handle the event in one of two ways.</p>
<pre><code class="language-javascript">
imageNode.addEventListener('error', function(event) {
  image.style.display = 'none';
});
</code></pre>
<p>Unfortunately, <code>addEventListener</code> does not address all use cases. My colleague <a href="http://twitter.com/pornelski">Kornel</a> has kindly pointed me to an <a href="http://jsbin.com/esimAWA/2/quiet">example that demonstrates</a> that the only way, sadly, to guarantee the execution of image <code>error</code> event callbacks is to use (the often frowned upon) inline event handlers.</p>
<pre><code class="language-markup">
&lt;img src="http://example.com/image.jpg" onerror="this.style.display='none';" /&gt;
</code></pre>
<p>The reason for this is that you cannot be sure that the code that binds the <code>error</code> event handler will be executed before the <code>error</code> event actually happens. Using inline handlers means that when the markup is parsed and the image is requested, our <code>error</code> listeners will be attached.</p>
<p><a class="demo-button" href="http://jsbin.com/ekulop/2/edit">Demo: Image error</a></p>
<h3>Lessons From The Event Model</h3>
<p>A lot can be learned from the success of the DOM events model. We can employ similar decoupled concepts in our own projects. Modules in an application can be as complex as they need to be, so long as that complexity is sealed away behind a simple interface. Many front-end frameworks (such as Backbone.js) are heavily event-based, solving cross-module communication in a publish and subscribe model that is very similar to the DOM.</p>
<p><strong>Event-based architectures are great.</strong> They give us a simple common interface in which to write applications that respond to physical interactions across thousands of devices! Via events, devices tell us exactly what has happened and when it occurred, letting us respond however we please. What goes on behind the scenes is not of concern; we get a level of abstraction that frees us to get on with building our awesome app.</p>
<h4>Further Reading</h4>
<ul>
<li>“<a href="http://www.w3.org/TR/DOM-Level-3-Events">Document Object Model Level 3 Events Specification</a>,” W3C</li>
<li>“<a href="http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture">Graphical representation of an event dispatched in a DOM tree using the DOM event flow</a>” (image) W3C</li>
<li>“<a href="https://developer.mozilla.org/en/docs/Web/API/Event">Event</a>,” Mozilla Developer Network</li>
<li>“<a href="http://alistapart.com/article/domtricks2">DOM Design Tricks II</a>,” J. David Eisenberg, A List Apart</li>
<li>“<a href="http://www.quirksmode.org/dom/events/">Event compatibility tables</a>,” Quirksmode</li>
</ul>
<p><em>Special thanks to <a href="http://twitter.com/pornelski">Kornel</a> for a brilliant technical review.</em></p>
<p><em>(al, il)</em></p>
<hr />
<p><small>© Wilson Page for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/12/an-introduction-to-dom-events/#comments" thr:count="0"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/12/an-introduction-to-dom-events/feed/atom/" thr:count="0"/>
        <thr:total>0</thr:total>
    </entry>
            <entry>
        <author>
            <name>Christian Holst</name>
                                    <uri>http://www.baymard.com</uri>
                    </author>
                <title type="html"><![CDATA[An E-Commerce Study: Guidelines For Better Navigation And Categories]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/11/an-e-commerce-study-guidelines-for-better-navigation-and-categories/"/>
        <id>http://mgmt.smashingmagazine.com/?p=175782</id>
        <updated>2013-11-11T13:31:32Z</updated>
        <published>2013-11-11T13:31:32Z</published>
            <category scheme="http://www.smashingmagazine.com" term="UX Design"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/11/an-e-commerce-study-guidelines-for-better-navigation-and-categories/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p>Product findability is key to any e-commerce business &mdash; after all, if customers can’t find a product, they can’t buy it. Therefore, at Baymard Institute, we invested eight months conducting a large-scale usability research study on the product-finding experience. We set out to explore how users navigate, find and select products on e-commerce websites, using the home page and category navigation.</p>
<p>The one-on-one usability testing was conducted following the “think aloud” protocol, and we tested the following websites: Amazon, Best Buy, Blue Nile, Chemist Direct, Drugstore.com, eBags, GILT, GoOutdoors, H&#038;M, IKEA, Macy’s, Newegg, Pixmania, Pottery Barn, REI, Tesco, Toys’R’Us, The Entertainer, and Zappos. The pages and design elements that we tested include the home page, category navigation, subcategories, and product lists.</p>
<p>Throughout the test sessions, the subjects would repeatedly abandon websites because they were unable to find the products they were looking for. Indeed, <strong>the subjects encountered over 900 usability-related problems</strong>, despite the websites having been built for multi-million dollars. All of these usability issues have been distilled into 79 concise guidelines in a report titled “Homepage &#038; Category Usability.” In this article, we’ll go over seven of the guidelines.</p>
<h3>1. Don’t Make Parent Categories Shallow. (Also, Have Parent Categories.)</h3>
<p><strong>Issue observed:</strong> When the hierarchy of categories is just labels and headers, it breaks the expectations of users and forces them into narrower sections than they desire, preventing explorative product browsing.</p>
<p>Grouping subcategory options in drop-down menus and other areas is a vital part of making them both manageable and scannable; and most websites have done so. Surprisingly, though, on many of the websites tested, the top level of the drop-down categories was only text labels, not actual clickable elements. This conflicted with the expectations of the majority of the test subjects, who anticipated that the headers would be clickable.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/potterybarn-rei.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/potterybarn-rei-500px.png" width="500" height="220" /></a><br/><em>The Pottery Barn website (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/potterybarn-rei.png">larger view</a>).</em></p>
<p>“I’d think that you can click all of it,” said a subject of Pottery Barn’s website (above left) when looking at the drop-down menu, “and that the black items will take me to a general page with all ‘Living room’ items.” Alas, upon hovering over the black heading, the mouse cursor changed to a text-selector rather than a pointing hand, and the subject concluded that it wasn’t clickable after all. The same type of shallow parent headings was found on REI’s website (above right).</p>
<p>Most subjects expected that these headings would be clickable and often tried clicking them, despite the cursor indicating unclickability. The subjects wanted to keep a fairly broad scope of products, in the hope of landing on a page that displays a curated set of subcategories that would assist them in selecting a more defined scope (as opposed to a page listing products). <strong>Making parent categories a part of the product hierarchy</strong> (and not just be shallow text labels) is critical in supporting explorative product browsing, so that users who haven’t fully decided what they want or who are looking for inspiration on what to purchase can dip their toes in broader categories before diving into narrowly defined ones.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-amazon.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-amazon-500px.png" width="500" height="195"  /></a><br/><em>Pixmania.com (left) and Amazon.com (right). (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-amazon.png">larger view</a>)</em></p>
<p>On Pixmania’s website (above left), a subject tried to select the generic “Digital Cameras” category, instead of specific camera types. He didn’t want to specify a camera type subcategory yet because he was still unsure about the exact differences and hadn’t decided on his particular needs. On Amazon (above right), another subject hovered over “Shop by Department” and tried to click ”Movies, Music &#038; Games,” which is orange when hovered over (Amazon’s hover style for links in the drop-down menu is orange and underlined), but nothing happened. She tried again before realizing that she had to choose one of the subcategories on the left.</p>
<p>On websites in which headings are actually selectable parent categories (i.e. part of the website’s taxonomy), the subjects often ended up relying on them for an initial overview of an entire category, and from there made informed decisions about which subcategories to select.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/gooutdoors-toysrus.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/gooutdoors-toysrus-500px.png" width="500" height="156" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/gooutdoors-toysrus.png">Larger view</a></em></p>
<p>This critical guideline isn’t limited to drop-down menus, but applies to any representation of a hierarchy of categories. Examples would be the categories displayed in the sidebar or in the site map of a product catalog, as well as permanently visible main navigation bar options (i.e. very top-level categories). In all of these cases, a parent category should exist and be selectable, as opposed to being a shallow text label.</p>
<h3>2. Put The Same Subcategory Within Multiple Main Categories When Necessary.</h3>
<p><strong>Issue observed:</strong> When a subcategory could logically appear in multiple parent categories but appears only in one, users are often led astray.</p>
<p>Depending on your product catalog, you might end up with subcategories that users would expect to find in multiple parent categories. For example, users might look for a coffee table in both the “Living Room” and “Tables” sections, as well as in the “Accessories” subcategory of “Sofas.”</p>
<p>While the ideal solution is to craft a completely unambiguous set of top-level categories, this is not always realistic, and sometimes popular demand requires a fuzzy category to be introduced in the top-level categories. Therefore, to <strong>avoid the severe usability problem of users not being able find a subcategory</strong> where they expect (which often lead subjects to conclude that the store simply doesn’t carry the item), consider putting the subcategory in multiple parent categories.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ecommerce-homepage-and-category-usability-01.jpg"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ecommerce-homepage-and-category-usability-500px.jpg" width="500" height="298" /></a><br/><em>BestBuy.com (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/ecommerce-homepage-and-category-usability-01.jpg">larger view</a>)</em></p>
<p>One subject was unsure whether she would find computer adapters in “Office” or “Computers &#038; Tablets,” because the former describes a usage context, while the latter describes the type of product. Based on the subcategory options, she found the latter to be the correct one. However, in “Computers &#038; Tablets” (above right), she was in doubt about whether to look in “Batteries &#038; Power” or in the generic “Accessories.” Luckily, both led her to adapters. Also, notice how Best Buy has an “Ink &#038; Toner” category within “Computers &#038; Tablets,” as well as a “Printer Ink &#038; Toner” category within “Office,” allowing users to find the category in any of the potentially matching parent categories.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/bestbuy.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/bestbuy-500px.png" width="500" height="140" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/bestbuy.png">Larger view</a></em></p>
<p>Consider the “Office” category in the Best Buy example above. All of its subcategories could be in other top-level categories, yet the “Office” section is presumably still needed to support the large portion of Best Buy’s customers who shop with a “home versus work” mindset. In these instances, featuring very important subcategories within multiple parent sections would be relevant (assuming that they semantically fit them equally well) because users will look in the one that best fits their context.</p>
<p>In terms of implementation, there are <strong>two main approaches to featuring the same subcategory in multiple parent categories</strong>. Our tests showed no conclusive evidence for one method over another. Each has its advantages and disadvantages:</p>
<ul>
<li>You could put the subcategory in one place in the website’s taxonomy, and then simply link to that destination in the other parent categories (for example, in the drop-down menu). The user would then jump scope to the “real” category, regardless of where they access it from. This could cause confusion if the user knows they have clicked a link in a menu named “Office” but then landed in the “Electronics” section (as indicated by the breadcrumbs).</li>
<li>Alternatively, you could duplicate the categories so that each is a unique entry in the website’s hierarchy, with proper breadcrumb paths, etc. The downside here is technical complexity. Products must be tagged consistently across multiple duplicated subcategories; the search engine’s auto-suggestions must not suggest any one category more than once in a single search; and so on. Furthermore, implementing this requires canonical pages to be set up in order to avoid SEO penalties for the duplicate pages.</li>
</ul>
<h3>3. Consider Having A “What’s New” Category Or Filter.</h3>
<p><strong>Issue observed:</strong> Some users want to see what’s new in your store &mdash; say, to be inspired or when buying for a friend &mdash; without having to plow through previously browsed products.</p>
<p>“H&#038;M is one of the websites that I check from time to time,” a test subject explained, “so I might pick ‘New Arrivals,’ like this, and see what new stuff they have.” Many subjects who had experience with a website or brand that we tested would look for a “What’s New” category. This was especially true if they cared deeply about the products and brand and already had <strong>a good idea of the product catalog</strong> and, thus, wanted to check out what had arrived since their previous visit.</p>
<p>Clearly, a “What’s New” filter-based category is a great way to support return visitors, so that they can easily identify what new products have arrived since their last visit. But there are other use cases for “What’s New.”</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/HM-whats-new.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/HM-whats-new-500px.png" width="500" height="411" alt="“New Arrivals” is particularly meaningful in seasonal industries, where the newness factor could be a major part of the purchasing decision." title="“New Arrivals” is particularly meaningful in seasonal industries, where the newness factor could be a major part of the purchasing decision." /></a><br />
<em>“New Arrivals” is particularly meaningful in seasonal industries, where the newness factor could be a major part of the purchasing decision. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/HM-whats-new.png">larger view</a>)</em></p>
<p>In seasonal industries, such as clothing and groceries, “What’s New” helps users to see what’s currently fresh and in season. “What’s New” shouldn’t be taken too literally. For example, fresh figs aren’t exactly new because they are in stores every year, but they are new to stores around summertime, and most users would expect to find them in a “What’s New” type of section, regardless of whether they are technically new (for example, the SKU might be the same). Indeed, the category or filter shouldn’t necessarily be called “What’s New”; depending on the product type, a label such as “New Arrivals” or “In Season” might be more appropriate.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/theentertainer-whats-new.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/theentertainer-whats-new-500px.png" width="500" height="400" alt="Unsure of what to buy for an eight-year-old nephew, a subject decided to open the “New” category because “kids often want the latest thing.”" title=" Unsure of what to buy for an eight-year-old nephew, a subject decided to open the “New” category because “kids often want the latest thing.”" /></a><br />
<em>Unsure of what to buy for an eight-year-old nephew, a subject decided to open the “New” category because “kids often want the latest thing.” (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/theentertainer-whats-new.png">larger view</a>)</em></p>
<p>Some gift-buyers want to see new releases to buy something interesting and novel. The recentness of a product also lowers the chance that the gift recipient already owns the product, which is particularly important when the buyer doesn’t know the recipient well.</p>
<p>Making “What’s New” a filter, rather than a separate site-wide category, is often a good idea, so that users can see new items within sections. This works well in several cases: for repeat visitors who want to check only the new items in a particular category; in seasonal industries where a user is interested only in what’s in season in a particular section, such as “Fruits”; and, last but not least, for gift-buyers who need to pick a section that’s relevant to the recipient before considering how to find the best item in that section.</p>
<p>“What’s New” can be integrated as an option in the filtering tools or as part of the category navigation (even if it’s actually a filter that’s presented as a subcategory). During testing, the subjects responded well to seeing it in both the filtering tools and in the category navigation of websites in seasonal industries. But they can clutter up category navigation quickly if not implemented carefully (i.e. if the options are not progressively disclosed as categories are selected). In industries in which newness isn’t as important, a filtering option would probably suffice.</p>
<h3>4. Suggest Both Alternative And Supplementary Products On Product Pages.</h3>
<p><strong>Issue observed:</strong> Alternatives, substitutes, add-ons and accessories to the product that the user is currently viewing are unreasonably difficult to find without good upselling and cross-selling on the product page.</p>
<p>Upselling and cross-selling is great for business. And, when implemented appropriately, they can be great for usability, too. Suggesting supplementary products is great for users who are looking for add-ons or accessories to the product they are viewing, while suggesting similar products is great for users who are searching for alternatives or substitutes.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/bluenile-lack-of-upsell.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/bluenile-lack-of-upsell-500px.png" width="500" height="329" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/bluenile-lack-of-upsell.png">Larger view</a></em></p>
<p>“It’s like when you look for movies online. If I liked this one, then I might also like these. That’s pretty smart,” a subject explained when stumbling upon the “Similar Diamonds to Consider” on the product page for Blue Nile shown above. Suggesting substitute products is an effective way to keep the user on product pages that don’t match their criteria.</p>
<p>If the user arrives on a product page that turns out not to match their criteria, they will either give up and abandon or look for alternatives or substitutes. L<strong>uckily, most users are patient in the beginning</strong> and opt for the latter, but they will quickly grow tired if the only way to browse alternatives is to go back to the overview list of products.</p>
<p>This is where suggesting similar products helps. By listing alternatives and substitutes directly on the product page, the user can go directly from one product to the next. This much richer display of information about the product keeps the user engaged on the page and close to the “Add to Cart” button and checkout process. <strong>Good suggestions of similar products also help the user </strong>find alternatives or substitutes across the website’s entire product catalog, not only easing the browsing experience but also enhancing product findability (and enabling cross-sectional navigation via breadcrumbs).</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/gilt-lack-of-crosssell.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/gilt-lack-of-crosssell-500px.png" width="500" height="237" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/gilt-lack-of-crosssell.png">Larger view</a></em></p>
<p>“Sometimes they have some looks or some ideas, or something,” a subject explained after scrolling to the end of the product page on Gilt shown above. While the “May We Suggest” suggestions are great, the subject had already found a dress (on the product page she was currently on) and wanted to complete her outfit with a pair of shoes to go with the dress. Unfortunately, Gilt offered only alternative products (i.e. other dresses) and not add-ons or accessories (shoes, jewelry, makeup, etc.).</p>
<p>While suggestions for similar products are great, they often aren’t enough. <strong>Users will often want suggestions of add-ons and accessories</strong>, too. After deciding to purchase a product, some users will want to buy additional &mdash; supplementary &mdash; products along with it, to “complete the look” or “finish the package.” A user buying a camera is likely to want a case for it. Yet finding such supplementary products is often a hassle. Even if the website has a subcategory for accessories, the user would have to go back to the product list, select the subcategory and apply the right compatibility filters (which works only for category browsing, not search).</p>
<p>With a list of add-ons and accessories directly on the product page, the user would easily be able to find products to supplement their purchase. Much like suggestions for similar products, suggestions for supplementary products ease the user’s browsing experience, enhance product findability, and &mdash; to a great extent &mdash; enable cross-sectional navigation. Not to mention its obvious business appeal.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-recommended-bags.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-recommended-bags-500px.png" width="500" height="390" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-recommended-bags.png">Larger view</a></em></p>
<p>“When they say ‘Recommended for you,’ I assume they will fit,” a subject explained, referring to the camera cases displayed after adding a Nikon Coolpix pocket camera to his cart on Tesco (above). It turned out that one of the two recommended cases didn’t fit the camera.</p>
<p>When suggesting supplementary products, label them appropriately if compatibility is an issue in your industry. Many of the subjects assumed that any accessories suggested would be compatible with the product they were viewing or had just added to their cart. Only when the suggested products were explicitly labeled as being based on the behavior of other users (for example, “Other customers also bought”) did the subjects not assume them to be compatible. <strong>Be careful in labelling behavior-based suggestions</strong> for supplementary products as “recommended” if you can’t guarantee their compatibility with the product they are being suggested to complement.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-both-cross-and-up-sell.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-both-cross-and-up-sell-500px.png" width="500" height="366" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-both-cross-and-up-sell.png">Larger view</a></em></p>
<p>“Something which is similar that other customers visited or bought,” a subject mumbled to himself when glancing over the sidebar shown above. Tesco helps its users find both alternative and supplementary products by including lists of both “Others bought these alternatives” and “Customers who bought this also bought” in the sidebar of its product pages. (And unlike on its shopping-cart page, Tesco gets the labeling right here by clearly indicating that the lists are based on the behavior of other customers.)</p>
<p>Given that users want suggestions for both similar and supplementary products, implementing both on product pages is recommended. The lists don’t have to be located near each other, although they could be, as long as they aren’t mixed. The subjects responded poorly when the criteria or theme of the product suggestions was not clear. Therefore, keep suggestions for similar products and supplementary products in distinct groups, but be sure to have both.</p>
<p>While basing these suggestions on the behavior of other users can be effective, exercise care. Tesco’s suggestions for supplementary products consisted entirely of memory cards, even though many other relevant add-ons and accessories are obvious, such as cases, lenses and batteries. So, either manually curate the suggestions or have the system generate them based on a broad range of factors, so that a diverse set of complementary product types is shown.</p>
<h3>5. List “Recently Viewed Items.”</h3>
<p><strong>Issue observed:</strong> Refinding a previously visited product becomes needlessly complex when the user has to rely on the browser’s native “Back” button or has to renavigate the categories or reuse search.</p>
<p>During testing, subjects often wanted to return to a previously visited item &mdash; sometimes to check whether certain features of the previous item were compatible with the new one, other times to compare two products before deciding on one to purchase, and still other times to return to a certain product scope from where they could use the breadcrumbs to climb back up the category hierarchy.</p>
<p>Whatever the reason, the subjects simply wanted to refind a previously viewed product. Yet, on websites without a “Recently viewed items” feature, the only ways to do this were through repeated clicking of the browser’s “Back” button (an option that occurred only to some subjects) or by searching for it or plowing through the product categories once again.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-500px.png" width="500" height="181" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania.png">Larger view</a></em></p>
<p>When looking for a camera case on Pixmania (above), this subject realized that he needed the name of the camera he chose. He went back to the product page using the browser’s “Back” button, then reopened the drop-down menu, then opened the “Camera Cases” subcategory in a new tab. A list of “Recently viewed items” would have greatly simplified this process.</p>
<p>A list of “Recently viewed items” typically consists of a row of products that the user has previously visited. It is a kind of history-based breadcrumb trail (except that it typically includes only products, not categories or other pages). The list tends to be located towards the bottom of the product page &mdash; sometimes even in the footer &mdash; but is sometimes given more prominence in a sidebar.</p>
<p>However, the list should be available on all pages of the website (not just the product page), because returning to a previously visited item would be just as welcomed by users who find themselves lost on a category page. The footer has the benefit of being out of the way most of the time; and then when subjects wanted to change scope or refind an item, most scrolled to the bottom of the page, likely looking for cross-sectional navigational such as “Related Items,” and thus discovering the “Recently viewed items” list.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Tesco-recently-viewed.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Tesco-recently-viewed-500px.png" width="500" height="180" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Tesco-recently-viewed.png">Larger view</a></em></p>
<p>On Tesco (above), refinding a previously visited product is made easy by the “Items you have recently viewed” list, which is integrated in the footer on all category and product pages. Compare how easy it was for this subject to check the camera’s dimensions with the previous Pixmania example.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Crate-Barrel-recently-viewed-items.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Crate-Barrel-recently-viewed-items-500px.png" width="500" height="280" /></a><br />
<em>Another location for the “Recently viewed items” list is the sidebar, as seen here on Crate &#038; Barrel. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Crate-Barrel-recently-viewed-items.png">larger view</a>)</em></p>
<p>With this list readily available throughout the website, users are assured that refinding products will be easy, and they are more likely to explore other items because they know that returning to a favorite won’t be a hassle. Combined with breadcrumbs, <strong>users enjoy a powerful combination</strong> that facilitates both history-based cross-sectional navigation and section jumping. Show “Recently viewed items” to everyone, then, without requiring users to sign in; the list should be session-based, functioning much like a shopping cart.</p>
<p>Because the list is automatically generated for users, a couple of privacy features are worth considering. While the vast majority of users will enjoy seeing “Recently viewed items,” a few will want to hide the items because they don’t want others to know or because they’re on a public computer. In such cases, consider two features: “Clear all” and “Disable list.”</p>
<h3>6. Create Dedicated Pages That List Compatible Products.</h3>
<p><strong>Issue observed:</strong> Users have a difficult time finding compatible products and verifying their compatibility when the website doesn’t explicitly state their compatibility or link to the corresponding products.</p>
<p>Finding a spare adapter for your laptop or buying a camera and matching case might sound like trivial tasks, but during testing, it turned out to be extremely difficult for subjects, who had a completion rate of only 35%. This means that 65% had to give up or, worse, ended up purchasing a product that they believed was compatible but was, in fact, not.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-camera-compatibility.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-camera-compatibility-500px.png" width="500" height="180" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-camera-compatibility.png">Larger view</a></em></p>
<p>The subject above opened the camera page in a new tab, but even with the camera’s dimensions close at hand, finding a matching case proved to be tiresome, as he still had to open the page for the camera case, go to the specifications, locate the dimensions, compare it to the camera’s, and repeat this for every single case. After a few attempts he gave up, like 65% of the subjects.</p>
<p>Finding compatibility-dependent accessories can be difficult, which is why you should always suggest both alternative and supplementary products on a product page (see guideline 5), as well as list “Recently viewed items” (guideline 6). However, if the majority of accessories in your industry are strictly compatible with certain other products (regardless of whether you sell those other products), then consider also offering whole pages listing compatible products. Technology industries are ideal for this (due to the technical dependency between products), whereas it would be overkill for a clothing store (all clothes “function” together &mdash; the only “compatibility” factor is taste).</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-compatibility.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-compatibility-500px.png" alt="" width="500" height="411" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-compatibility.png">Larger view</a></em></p>
<p>“I’ll pick Nikon now &mdash; originally, I didn’t necessarily want one from Nikon &mdash; but I’ll do it now hoping to find an original camera bag so I know it will fit, because I’m not really keen on going back to find my camera dimensions and then compare to the bags,” a test subject explained. “So, unless it’s insanely expensive, I’ll probably take an original.” Subjects often gave up finding a compatible case that they liked and simply tried to find anything that would fit their camera. Using brand filters was often a part of that strategy, although it led some novice photographers to purchase incompatible cases, because they assumed that most Nikon cases would fit most Nikon cameras.</p>
<p>When dedicating whole pages to compatible products, then the page for, say, the “Nikon D7000 camera” would list all compatible accessories, such as batteries, cases and lenses. Going a step further, the page could even filter by product type, so that users can view “compatible ‘camera cases’ for ‘Nikon D7000’.” This enables users to navigate the product catalog vertically and to find (typically high-profit) accessories, instilling confidence in the accessories’ compatibility.</p>
<p><strong>Determining compatibility across a catalog is a major undertaking</strong>, but with intelligent queries for each compatibility-dependent category, a lot of the work can be automated. The benefits of determining such compatibility are many. Besides the already mentioned ability to browse vertically across categories, it enables you to create powerful filters. Imagine one filter in the “Laptop Adapters &#038; Chargers” category that allows the user to enter their computer’s model and see compatible chargers. Furthermore, it is also great for search engine optimization, because these compatibility lists can be presented as permanent pages, giving you several highly targeted and unique landing pages for each product, such as “Lenses for Nikon D7000,” “Laptop Chargers &#038; Adapters for MacBook Pro” and “Covers for Kindle Paperwhite.”</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-cross-sell-no-category-link.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-cross-sell-no-category-link-500px.png" width="500" height="316" /></a><br/><em>When seeing these camera bags being cross-sold in their shopping cart, the subject above was disappointed by their looks (all black nylon). (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/pixmania-cross-sell-no-category-link.png">larger view</a>)</em></p>
<p>Had Pixmania established compatibility across its catalog, it could have linked to a list of compatible accessories &mdash; “See all 8 compatible cases for Canon PowerShot A2300” &mdash; at the end of this cross-selling section, providing a direct path to a complete overview of relevant cases.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-poor-cross-sell-suggestions.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-poor-cross-sell-suggestions-500px.png" alt="Establishing compatibility across a catalog helps you to avoid plainly wrong matches." title="Establishing compatibility across a catalog helps you to avoid plainly wrong matches." width="500" height="400" /></a><br/><em>Establishing compatibility across a catalog helps you to avoid plainly wrong matches. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/tesco-poor-cross-sell-suggestions.png">larger view</a>)</em></p>
<p>In Tesco’s shopping cart above, the subject tried to find a matching case for the camera she had just chosen, but she completely lost faith in the website upon seeing few related accessories and a lot of irrelevant recommendations, including a saxophone!</p>
<p>Compatibility-based pages should be cross-linked with the original product page, as well as with any “Compatible With” lists on the product pages of compatible items. Such pages could also appear in a user’s shopping cart and be included in the filters of all relevant accessory categories across the website.</p>
<p>Besides being great for cross-selling and SEO, dedicated pages of compatible products can be mined for data to create filters and to improve cross-selling recommendations. They would enable you to avoid suggesting incompatible products, which is critical because most users will assume that any product being suggested fits.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/newegg-lack-of-compatibility-lists.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/newegg-lack-of-compatibility-lists-500px.png" width="500" height="296" class="alignnone size-large wp-image-119773" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/newegg-lack-of-compatibility-lists.png">Larger view</a></em></p>
<p>“It fits ‘X60,’ but that’s not mine. I have an X61,” a subject said, referring to the top result above. He continued, “It fits all in the X60 series. Does that mean my X61 as well? I would go to Lenovo’s website and find out.” Confusion about which models are in a “series” was common, because a series’ name can be confused with a particular model’s name.</p>
<p>Just showing a list of compatible products for each model doesn’t always cut it because some models are organized into series as well. In the Newegg example just above, the “Lenovo ThinkPad X61s” model is part of the “Lenovo X60 series.” This hierarchy should be reflected in the dedicated pages of compatible products as well, because some test subjects mixed up a series’ name with a model’s name. Pages for compatible products in a series should link to all models in that series to clear up any doubts the user might have.</p>
<p>Lastly, <strong>dedicated pages of compatible products can still be meaningful</strong> even if the website doesn’t carry all of the products. For example, an electronics store that doesn’t sell Sony digital cameras could still have pages of compatible products for Sony cameras to help customers find accessories that it does sell. The same goes for websites that don’t even sell products from a given industry; for example, a website that sells apparels or bags but not laptops or electronics might still want to list compatible products so that users can browse only the bags that fit their particular laptop.</p>
<h3>7. Always Link Contextual Images Directly To The Products Shown.</h3>
<p><strong>Issue observed:</strong> Users quickly grow frustrated when they spot a product in a contextual image but can’t navigate to it.</p>
<p>“I want this. What do I do?… I want this one,” one subject said, laughing out of despair while pointing and clicking at a coffee table shown in a contextual image on IKEA. While inspirational images can raise the aesthetic appeal of an e-commerce website and serve as an important vertical style-based navigation path, not directly linking to the products depicted in contextual images will frustrate users to no end.</p>
<p>During testing, the subjects were dumbfounded that a website didn’t simply link directly to all products depicted and that they had to hunt them down to learn more or to purchase them. This lowered their perception of the website, and some took it as a sign that the owners clearly hadn’t used their own website.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/IKEA-links-all-depicted-categories.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/IKEA-links-all-depicted-categories-500px.png" width="500" height="399" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/IKEA-links-all-depicted-categories.png">Larger view</a></em></p>
<p>“I don’t know how I found this cushions category. I wonder why there wasn’t a cushions category along with all the sofa options up there. But then I saw this image of a cushion down the page and thought that maybe I’m on the right track.” One subject said this while looking for cushions in the sofa category on IKEA’s website. As he scrolled down the “Sofas” subcategory page, he spotted an image containing a cushion, and while the image was actually cross-selling sofa covers, the “Cushions” category was linked to it as well.</p>
<p><strong>Images tend to draw a lot of attention</strong>, and when users get stuck in first attempting to find a product, they tend to scan the page very narrowly for anything that looks like a path to the product they want. Therefore, contextual images should always link to the products depicted, even if the image is meant merely as inspiration for one of the products being shown. Users will still notice the other products in the image, especially if they are actively scanning for one of those product types. Even if the purpose of the image isn’t to promote that particular product, users will become frustrated if they can see the product but not access its page.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/IKEA-suggested-products-not-linked.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/IKEA-suggested-products-not-linked-500px.png" alt="IKEA-suggested-products-not-linked" width="500" height="331" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/IKEA-suggested-products-not-linked.png">Larger view</a></em></p>
<p>Above, a subject saw a table that he wanted in the thematic “Seating Solutions” image, so he clicked it, but nothing happened. He then tried the “Save to list” button, assuming it would save all of the products shown and that he could then simply remove the other products. But that didn’t happen either. “Nooo… Arrgghhh, it only added the sofa. I would like to get the sofa table,” he said, hovering over and right-clicking the table in the image. He laughed in despair as he continued, “I want this. What do I do? I want this one [pointing at the table]. I expected it would save all of them when I used the button, but it only saved the sofa.” After searching for the table, the subject ended up abandoning the website.</p>
<p>If an item is not being sold, ideally it shouldn’t be depicted at all. In practice, this is easier said than done because contextual images sometimes contain products that were available when the photograph was taken but that now are not (or are not in all distribution channels &mdash; for example, a store might sell some products offline only, or an international website might ship certain products to certain regions). Discarding or reshooting an entire scene of multiple products is likely unfeasible if just one or two of the products are no longer available.</p>
<p>In such cases, <strong>replace the product link with a description</strong>, rather than just remove it entirely (as seen in the IKEA example above). The description could be as simple as “Discontinued,” “Available only in store” or “Not available in US store” &mdash; the vital part is to indicate that the user may not purchase the item. If the item has not been discontinued but is simply unavailable for purchase in a particular channel or region (as with IKEA above), then the description can point very persistent customers in the right direction. Better yet, if similar products are available, consider linking to them or to their categories.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/potterybarn-not-linking-to-products-depicted.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/potterybarn-not-linking-to-products-depicted-500px.png" alt="Exploring how users navigate." title_"Exploring how users navigate." width="500" height="217" /></a><br/><em><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/potterybarn-not-linking-to-products-depicted.png">Larger view</a></em></p>
<p>In the image above on the left, one subject found the sofa in the header image interesting and clicked it to investigate further, only to be confused when presented with a list of products but not that particular sofa. In the image on the right, another subject was on the product page for a sofa. Upon inspecting the sofa images, she found that she very much liked the coffee table as well and wanted to know more about it. She looked around for links, but there weren’t any, not even in the cross-selling section further down the page.</p>
<p><a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/crate-barrel-links-to-all-products-depicted.png"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/crate-barrel-links-to-all-products-depicted-500px.png" alt="Another way to solve this challenge is to mark up contextual images with direct links to the products being depicted, as seen above on Crate &#038; Barrel, where clicking the “+” icon will open a quick preview of the pinned product." title+"Another way to solve this challenge is to mark up contextual images with direct links to the products being depicted, as seen above on Crate &#038; Barrel, where clicking the “+” icon will open a quick preview of the pinned product." width="500" height="314" /></a></br><em>Another way to solve this challenge is to mark up contextual images with direct links to the products being depicted, as seen above on Crate &#038; Barrel, where clicking the “+” icon will open a quick preview of the pinned product. (<a href="http://media.smashingmagazine.com/wp-content/uploads/2013/11/crate-barrel-links-to-all-products-depicted.png">larger view</a>)</em></p>
<p>Direct links are needed not only for contextual images. Header images and even some images on product pages would benefit from having direct links to the items being shown. For images on product pages, any products that are clearly depicted could be linked to either right below the image, by having a dedicated “get the look” cross-selling list, or at the very least in a generic cross-selling section on the product page. One could even experiment with tagging the image so that users can actually click right on the products they are interested in.</p>
<h3>If They Can’t Find It, They Can’t Buy It.</h3>
<p>In a time when more and more customers are accessing e-commerce websites through search engines and social media links that send them deep into a website’s hierarchy, enabling users to infer their current position in the hierarchy, to go to the generic parent category and to find related products is critical. Even customers who use on-site search will depend on the website’s taxonomy of categories to infer the available range of products.</p>
<p>No matter how much time you spend on the aesthetics, the product images and the optimization of landing pages, the customer’s overall experience will falter if the foundational e-commerce elements, such as the taxonomy of categories, aren’t solid.</p>
<p><strong>Designing user-friendly category-based navigation is no easy task</strong>. It requires a solid information architecture, systematic labelling, a logical hierarchy, curated subcategory pages and a balanced home page design. Obviously, all of this can’t be covered in an article like this, but the seven guidelines we’ve looked at are low-hanging fruit; by following them, you can quickly improve the category navigation on a typical e-commerce website:</p>
<ol>
<li>Don’t make parent categories shallow.</li>
<li>Put the same subcategory within multiple main categories when necessary.</li>
<li>Consider having a “What’s New” category or filter.</li>
<li>Suggest both alternative and supplementary products on product pages.</li>
<li>List “Recently Viewed Items.”</li>
<li>Create dedicated pages that list compatible products.</li>
<li>Always link contextual images directly to the products shown.</li>
</ol>
<p>One last note. During testing, it became clear that loosely executed categories can have more devastating consequences than “just” immediate abandonment of the website &mdash; it could permanently damage the brand. When the subjects couldn’t find a particular product type, they would often conclude that the website didn’t carry such items. Such fundamental misunderstanding leads not only to an immediate loss of a sale, but to future losses because customers won’t visit a store that they assume does not carry the type of product they are looking for.</p>
<p><em>(al, il)</em></p>
<p><em>Learn more guidelines about category and navigation usability in the (paid) report “<a href="http://baymard.com/homepage-and-category-usability" title="Homepage &#038; Category Usability Report 2013">Homepage &#038; Category Usability</a>,” by the author of this article.</em></p>
<hr />
<p><small>© Christian Holst for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/11/an-e-commerce-study-guidelines-for-better-navigation-and-categories/#comments" thr:count="0"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/11/an-e-commerce-study-guidelines-for-better-navigation-and-categories/feed/atom/" thr:count="0"/>
        <thr:total>0</thr:total>
    </entry>
            <entry>
        <author>
            <name>Rachel Andrew</name>
                                    <uri>http://www.rachelandrew.co.uk</uri>
                    </author>
                <title type="html"><![CDATA[Building A Successful Product: Start Small And Listen]]></title>
        <link rel="alternate" type="text/html" href="http://www.smashingmagazine.com/2013/11/08/building-a-successful-product-start-small-and-listen/"/>
        <id>http://mgmt.smashingmagazine.com/?p=175316</id>
        <updated>2013-11-14T14:06:54Z</updated>
        <published>2013-11-08T10:53:14Z</published>
            <category scheme="http://www.smashingmagazine.com" term="Business"/><category scheme="http://www.smashingmagazine.com" term="Clients"/>            
        <content type="html" xml:base="http://www.smashingmagazine.com/2013/11/08/building-a-successful-product-start-small-and-listen/"><![CDATA[<table width="650">
<tr>
<td width="650">
<div style="width:650px;"><img src="http://statisches.auslieferung.commindo-media-ressourcen.de/advertisement.gif" alt="" border="0" /><br /><a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=1" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=1" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=2" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=2" border="0" alt="" /></a>&nbsp;<a href="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=target&#038;collection=smashing-rss&#038;position=3" target="_blank"><img src="http://auslieferung.commindo-media-ressourcen.de/random.php?mode=image&#038;collection=smashing-rss&#038;position=3" border="0" alt="" /></a></div>
</td>
</tr>
</table>
<p><em>Developing a product is one thing, bringing it to market is another. In this article, Rachel explains how to start with a new product, develop and support it over time. Interested in learning more? Rachel will be hosting a full-day <a href="https://shop.smashingmagazine.com/smashing-workshop-shipping-your-product-berlin.html">Smashing workshop on &#8220;Shipping Your Product&#8221;</a> in Berlin, and she has contributed a chapter on customer support to the brand new upcoming <a href="http://www.smashingmagazine.com/books/#the-smashing-book-4">Smashing Book #4</a> (to be released in late November). —Ed.</em></p>
<blockquote>
<p>&#8220;The goal of a startup is to find the sweet-spot where minimum product and viable product meet &mdash; get people to fall in love with you. Over time, you listen to your customers, make improvements and raise the bar on what viable means &mdash; making it more expensive for competitors to jump in.&#8221;</p>
<p>&ndash; <a href="http://radoff.com/blog/2010/05/04/minimum-viable-product-rant/">John Radoff</a></p>
</blockquote>
<p>If you are launching a bootstrapped product, then your aim should be to ship something that people are happy to give you money for as quickly as possible. This means launching with the minimum that will make your product something that people would be happy to buy. You can then begin to develop additional features based on what customers actually want and need, rather than on what you think they want and need.</p>
<p>In this article, based on my own experience, I’ll describe how it is possible to launch with a really small product and grow from those small beginnings by listening to your customers.</p>
<h3>How To Decide On Must-Have Features For Launch</h3>
<p>You might be starting small, but you need to draw that list of features that will make up your small but perfectly formed product offering, something that people would be happy to pay for because it brings them value as is. To get your product to launch, I suggest that you consider two main things:</p>
<ul>
<li>Who is my target customer?</li>
<li>What problem(s) will my product solve?</li>
</ul>
<p>For my own product, our target market was design agencies and freelancers. It’s a CMS, but we were not interested in making it a website-building tool or in appealing to non-coders. The customers we had in mind were the sort of people we were already working with: small agencies and designers who know how to write HTML and CSS, who don’t need a website-building tool and who want to manage content. This was an audience we knew well and importantly where people knew us. I would always recommend that if you are developing a product you target a market you already are well known in; <strong>it will make it far easier to spread the word</strong>, and for people to have trust in you. We also intended to appeal to people who develop relatively small-scale websites. We were not creating a Drupal competitor. So, our ideal customer is a designer, either freelance or in an agency, who knows HTML and CSS and has to develop smallish websites.</p>
<p>We wanted to solve two problems with the product. First, we wanted it to be really quick and easy to deploy. A small website doesn’t justify days of creating a theme or template. Secondly, we wanted to provide a solution that does not add any unwanted markup, CSS or JavaScript to the website. The designer should have control over everything the CMS outputs.</p>
<p>That was it. As we started to develop, a million ideas came to mind. We thought of so many features and possibilities, but we kept that simple use case and that ideal customer in mind and ruthlessly trimmed features until we had something that felt complete yet was about as small as it could be. That initial version of Perch took about four weekends to write &mdash; we were still a consultancy working with clients at the time. We spent about the same amount of time building the marketing website and the infrastructure to deliver the product.</p>
<h3>Launching With Confidence</h3>
<p>With your product developed, you should launch with confidence. You might have had a million features listed that you wish your product had, but your customers don’t know that. If your ideal customer exists and has the problems that you’ve identified and your product solves them, then you should be able to sell it to them. An advantage of getting to launch quickly is that you can test whether all of those things are true before spending any more time.</p>
<p><a href="http://radoff.com/blog/2010/05/04/minimum-viable-product-rant/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/Minimum-viable-product.png" width="500" height="358" alt="According to John Radoff, you have to take your time to listen to your customers, make improvements and raise the bar on what viable really means." title="According to John Radoff, you have to take your time to listen to your customers, make improvements and raise the bar on what viable really means." /></a><br /><em>According to John Radoff, you have to take your time to listen to your customers, make improvements and raise the bar on what viable really means. (<a href="http://radoff.com/blog/2010/05/04/minimum-viable-product-rant/">Image credits</a>)</em></p>
<p>Don’t be apologetic about the small feature set. Market and sell the product as it is now, making sure that you are accurate in presenting the scope of the product and what problems it will solve. Assuming that people do buy and start to use it, you’ll soon start to get suggestions and requests for features, and you will probably be surprised by some of them. Some of the things you have already identified will likely come up as requests; but in my experience, customers will have needs that you didn’t even know exist, and they will be very happy to tell you about them.</p>
<p>We heard no outcry from customers who felt shortchanged by our tiny product, because we were <strong>selling something that does what it says on the tin</strong>; our marketing and sales were aligned with the product itself. We found, however, that those initial customers were delighted as we started to add new features based on their feedback, and many people who use the product today and have developed a large number of websites using it were among that first group of customers.</p>
<h3>Listen To The People Who Are Willing To Pay For Your Product</h3>
<p>I opened this article saying that getting to the point where people will pay for your product is important. There will be no end of people who are keen to tell you exactly what you should build them for free. Getting to launch means that you can start to hear feature requests and ideas from your paying customers. Requests from people who are happy to pay for your product are far more valuable than requests from people who are not. Paying for a product changes a person’s relationship to it and to the company behind it. The person becomes a customer and feels reasonable for asking for the service and features that they would expect as a paying customer.</p>
<h3>Doing The Things That Will Make The Most Difference To The Most People</h3>
<p>If you successfully launch with a tiny feature set, then you will quickly start to get feature requests. This is great! But it can feel overwhelming. How do you even start to provide all of these new features, and how do you explain to customers why their pet feature will not be immediately added?</p>
<p><a href="http://www.flickr.com/photos/opensourceway/4929153543/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/million-ways.jpg" width="500" height="281" alt="Prioritize the feature that solves a more general problem and is useful to enough people to warrant the investment of time required to develop it." title="Prioritize the feature that solves a more general problem and is useful to enough people to warrant the investment of time required to develop it." /></a><br /><em>Prioritize the feature that solves a more general problem and is useful to enough people to warrant the investment of time required to develop it. (<a href="http://www.flickr.com/photos/opensourceway/4929153543/">Image credits</a>)</em></p>
<p>We have always been very clear to our customers that we <strong>prioritize those features that would benefit the largest number of users</strong>. We collate requests that people post in our suggestions forum, email to us, tweet or tell us in person. We also look for the hidden feature demands that can be found in what people are trying to do with the product. Sometimes we can see someone doing something very complicated to get around the fact that something is not possible out of the box. If we see a number of customers doing that, we can infer that a feature is needed there. The things that would help the most people soon rise to the top. We have always found that as soon as we have picked off the most requested feature, another comes along as the new top request!</p>
<h3>Getting Good Use Cases</h3>
<p>To add a feature to your product, you need to be able to define a general use case for it. You can’t add a feature as you might for a bespoke build for a client; the feature must solve a more general problem to become useful to enough people to warrant the investment of time required to develop it. We often ask our customers to explain the use case for a feature they are asking for. We want to know the general problem they are trying to solve, rather than how they think their particular problem should be solved.</p>
<p>We often find that by exploring the use case a little with the customer &mdash; and in the forums, other customers with similar requirements often pitch in &mdash; we start to open a narrow solution into something more generally useful. Once we do that, then the feature becomes far more likely to be one we consider.</p>
<p>That being said, every so often a customer asks for a feature that doesn’t compromise the core use case and is fairly specific but very quick to develop. In that case, we do enjoy being able to quickly pop it into the next dot release and letting them know it is there. One of the best things about working on your own product is being able to delight people and do those unexpected things that help people out.</p>
<h3>Looking After The Happy, Silent Majority</h3>
<p>We’ve built a product based on speaking with and listening to our customers, but remember that the customers you hear from are probably the minority. If statistics are a part of your customer-support system, then look at how many of your customers ever come to you for support. In our case, it’s about 25%. We hear from only 25% of our customers. So, 75% are quite happy with how our product works &mdash; happy enough, at least, not to feel the need to ask us anything or suggest a feature.</p>
<p><strong>Keeping that ideal customer in mind</strong> also really helps here. We have on occasion told people before purchase that we were not sure the product was a good fit for them, but they bought a copy anyway. They then spent a lot of time declaring the deficiencies they saw in the product &mdash; for example, complaining that it doesn’t come with themes or that they are being asked to write HTML. While these customers can be frustrating, you just have to step back and remember that they are not your ideal customer. The product isn’t really for them, so resist the temptation to add things for people who are not your target audience.</p>
<p>Even within your core audience, a few noisy people can make you feel as if all of your customers are asking for a particular feature. If that feature would take the product in a new direction or change a workflow, then getting opinions from the silent majority would be especially worthwhile. We have found that posting on our blog, talking on our podcast and mentioning a possible feature on Twitter does cause people we never see in the support forum to talk to us. If your usage statistics or sales data are broken down by user, then you can always use that to identify customers who you never hear from but are very active. Customers who like your product will generally be happy that you have asked them for feedback.</p>
<p><a href="http://www.flickr.com/photos/opensourceway/5364620846/"><img src="http://media.smashingmagazine.com/wp-content/uploads/2013/11/twitter-feedback.jpg" width="500" height="281" alt="Twitter may also be a useful platform to collect short feedback from customers. " title="Twitter may also be a useful platform to collect short feedback from customers. " /></a><br /><em>Twitter may also be a useful platform to collect short feedback from customers. (<a href="http://www.flickr.com/photos/opensourceway/5364620846/">Image credits</a>)</em></p>
<p>When asking customers for feedback, ask specific questions, rather than just what they think of your product. If you are proposing a major change, explaining the change and asking whether they foresee any issues in how they use the product can be enlightening.</p>
<h3>Protecting Your Core Use Case</h3>
<p>Clearly understanding your core use case &mdash; the initial problems your product is intended to solve &mdash; is vital to deciding which features to add to the product. We are over four years from launch, and yet the basic way people use our product has not changed &mdash; despite it being well into version two and far more full-featured than the tiny product we brought to market.</p>
<p>If a feature will complicate that basic use case, there would need to be a very good reason to add it. Sometimes we find another way to solve the same issue, which is where those general use cases from customers come in handy. You need to be happy to tell customers, however, that the feature they are asking for wouldn’t fit the product, and recognize that some of those customers might go elsewhere. Pleasing everyone is impossible, and your ideal customers wouldn’t want you to try.</p>
<h3>New Features Rarely Spike Our Sales</h3>
<p>It took me a long while to learn that adding new features is not a huge marketing win in itself. We’ve added some huge and much-requested features to Perch over the years. Many of those features took as long to build as developing the initial product did. However, launching a new feature has never made a blip in our sales figures. Our graph moves upwards at a fairly steady rate, with no evidence that any period of growth was caused by a particular feature.</p>
<p>That is not to say that adding features is not important. As mentioned, existing customers appreciate new features: They can see that the product is actively being developed and is evolving to meet their needs. However, pinning your hope of acquiring new customers on some new headline feature is not realistic in my experience. Instead, focus on marketing activities and on finding new customers and users, in addition to developing new features.</p>
<h3>Conclusion</h3>
<p>Starting small and focused, with a clear idea of who your ideal customer is and of the core problems that your product solves, is a great way to get a new product to market. For bootstrappers, it not only means bringing in much needed cashflow quickly, but also means that any new features you develop will be useful to your audience.</p>
<p>As your product matures, keeping your ideal customers in mind and speaking with them will help to ensure that you continue to serve your target market, rather than attempt to please everyone. By adding features deliberately and thoughtfully, you will delight existing customers and make the product useful to a wider market, while staying true to your goals.</p>
<p><em>Interested in learning more? Rachel will be hosting a full-day <a href="https://shop.smashingmagazine.com/smashing-workshop-shipping-your-product-berlin.html">Smashing workshop on &#8220;Shipping Your Product&#8221;</a> in Berlin, and she has contributed a chapter on customer support to the <a href="http://www.smashingmagazine.com/books/#the-smashing-book-4">Smashing Book #4</a> (to be released in late November).</em></p>
<p><em>(al, vf, il)</em></p>
<p><em>Front page image credits: <a href="http://www.flickr.com/photos/davegray/6865783267/sizes/m/in/photostream/">Dave Gray</a>.</em></p>
<hr />
<p><small>© Rachel Andrew for <a href="http://www.smashingmagazine.com">Smashing Magazine</a>, 2013.</small></p>]]></content>
                    
                                        <link rel="replies" type="text/html" href="http://www.smashingmagazine.com/2013/11/08/building-a-successful-product-start-small-and-listen/#comments" thr:count="12"/>
        <link rel="replies" type="application/atom+xml" href="http://www.smashingmagazine.com/2013/11/08/building-a-successful-product-start-small-and-listen/feed/atom/" thr:count="12"/>
        <thr:total>12</thr:total>
    </entry>
        </feed>
